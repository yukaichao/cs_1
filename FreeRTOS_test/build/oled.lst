ARM GAS  /tmp/ccAcRfab.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"oled.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.WriteCmd,"ax",%progbits
  18              		.align	1
  19              		.global	WriteCmd
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	WriteCmd:
  27              	.LVL0:
  28              	.LFB130:
  29              		.file 1 "Core/Src/oled.c"
   1:Core/Src/oled.c **** //////////////////////////////////////////////////////////////////////////////////	 
   2:Core/Src/oled.c **** //本程序只供学习使用，未经作者许可，不得用于其它任何用途
   3:Core/Src/oled.c **** //中景园电子
   4:Core/Src/oled.c **** //店铺地址：http://shop73023976.taobao.com/?spm=2013.1.0.0.M4PqC2
   5:Core/Src/oled.c **** //
   6:Core/Src/oled.c **** //  文 件 名   : main.c
   7:Core/Src/oled.c **** //  版 本 号   : v2.0
   8:Core/Src/oled.c **** //  作    者   : Evk123
   9:Core/Src/oled.c **** //  生成日期   : 2014-0101
  10:Core/Src/oled.c **** //  最近修改   : 
  11:Core/Src/oled.c **** //  功能描述   : 0.69寸OLED 接口演示例程(STM32F103ZE系列IIC)
  12:Core/Src/oled.c **** //              说明: 
  13:Core/Src/oled.c **** //              ----------------------------------------------------------------
  14:Core/Src/oled.c **** //              GND   电源地
  15:Core/Src/oled.c **** //              VCC   接5V或3.3v电源
  16:Core/Src/oled.c **** //              SCL   接PD6（SCL）
  17:Core/Src/oled.c **** //              SDA   接PD7（SDA）            
  18:Core/Src/oled.c **** //              ----------------------------------------------------------------
  19:Core/Src/oled.c **** //Copyright(C) 中景园电子2014/3/16
  20:Core/Src/oled.c **** //All rights reserved
  21:Core/Src/oled.c **** //////////////////////////////////////////////////////////////////////////////////?
  22:Core/Src/oled.c **** 
  23:Core/Src/oled.c **** #include "oled.h"
  24:Core/Src/oled.c **** 
  25:Core/Src/oled.c **** #include "oledfont.h"  	 
  26:Core/Src/oled.c **** 
  27:Core/Src/oled.c **** #include "stm32f4xx_hal.h"			   
  28:Core/Src/oled.c **** extern I2C_HandleTypeDef hi2c1;
  29:Core/Src/oled.c **** 
ARM GAS  /tmp/ccAcRfab.s 			page 2


  30:Core/Src/oled.c **** uint8_t OLED_1_data[8][128]={0};
  31:Core/Src/oled.c **** uint8_t OLED_2_data[8][128]={0};
  32:Core/Src/oled.c **** uint8_t CMD_Data[]={
  33:Core/Src/oled.c **** 0xAE, 0x00, 0x10, 0x40, 0xB0, 0x81, 0xFF, 0xA1, 0xA6, 0xA8, 0x3F,
  34:Core/Src/oled.c **** 					
  35:Core/Src/oled.c **** 0xC8, 0xD3, 0x00, 0xD5, 0x80, 0xD8, 0x05, 0xD9, 0xF1, 0xDA, 0x12,
  36:Core/Src/oled.c **** 					
  37:Core/Src/oled.c **** 0xDB, 0x30, 0x8D, 0x14, 0xAF,0x20,0x00};
  38:Core/Src/oled.c **** void WriteCmd(uint8_t ADDRESS)
  39:Core/Src/oled.c **** {
  30              		.loc 1 39 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 39 1 is_stmt 0 view .LVU1
  35 0000 00B5     		push	{lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 4
  38              		.cfi_offset 14, -4
  39 0002 83B0     		sub	sp, sp, #12
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 16
  42 0004 0146     		mov	r1, r0
  40:Core/Src/oled.c **** 	HAL_I2C_Mem_Write_DMA(&hi2c1,ADDRESS,0x00,I2C_MEMADD_SIZE_8BIT,CMD_Data,29);
  43              		.loc 1 40 2 is_stmt 1 view .LVU2
  44 0006 1D23     		movs	r3, #29
  45 0008 0193     		str	r3, [sp, #4]
  46 000a 054B     		ldr	r3, .L3
  47 000c 0093     		str	r3, [sp]
  48 000e 0123     		movs	r3, #1
  49 0010 0022     		movs	r2, #0
  50 0012 0448     		ldr	r0, .L3+4
  51              	.LVL1:
  52              		.loc 1 40 2 is_stmt 0 view .LVU3
  53 0014 FFF7FEFF 		bl	HAL_I2C_Mem_Write_DMA
  54              	.LVL2:
  41:Core/Src/oled.c **** }
  55              		.loc 1 41 1 view .LVU4
  56 0018 03B0     		add	sp, sp, #12
  57              	.LCFI2:
  58              		.cfi_def_cfa_offset 4
  59              		@ sp needed
  60 001a 5DF804FB 		ldr	pc, [sp], #4
  61              	.L4:
  62 001e 00BF     		.align	2
  63              	.L3:
  64 0020 00000000 		.word	.LANCHOR0
  65 0024 00000000 		.word	hi2c1
  66              		.cfi_endproc
  67              	.LFE130:
  69              		.section	.text.OLED_Refreash,"ax",%progbits
  70              		.align	1
  71              		.global	OLED_Refreash
  72              		.syntax unified
  73              		.thumb
  74              		.thumb_func
  75              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccAcRfab.s 			page 3


  77              	OLED_Refreash:
  78              	.LFB131:
  42:Core/Src/oled.c **** 
  43:Core/Src/oled.c **** 
  44:Core/Src/oled.c **** //向设备写数据
  45:Core/Src/oled.c **** void OLED_Refreash(void)
  46:Core/Src/oled.c **** {
  79              		.loc 1 46 1 is_stmt 1 view -0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83 0000 00B5     		push	{lr}
  84              	.LCFI3:
  85              		.cfi_def_cfa_offset 4
  86              		.cfi_offset 14, -4
  87 0002 83B0     		sub	sp, sp, #12
  88              	.LCFI4:
  89              		.cfi_def_cfa_offset 16
  47:Core/Src/oled.c **** 	static char oled_refresh = 0;
  90              		.loc 1 47 2 view .LVU6
  48:Core/Src/oled.c **** 	
  49:Core/Src/oled.c **** 	if(oled_refresh == 0)
  91              		.loc 1 49 2 view .LVU7
  92              		.loc 1 49 18 is_stmt 0 view .LVU8
  93 0004 114B     		ldr	r3, .L9
  94 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  95              		.loc 1 49 4 view .LVU9
  96 0008 83B9     		cbnz	r3, .L6
  50:Core/Src/oled.c **** 	{
  51:Core/Src/oled.c **** 		//HAL_I2C_Mem_Write(&hi2c1 ,0x78,0x40,I2C_MEMADD_SIZE_8BIT,&data,1,0xff);
  52:Core/Src/oled.c **** 		HAL_I2C_Mem_Write_DMA(&hi2c1,OLED_1,0x40,I2C_MEMADD_SIZE_8BIT,OLED_1_data[0],1024);
  97              		.loc 1 52 3 is_stmt 1 view .LVU10
  98 000a 4FF48063 		mov	r3, #1024
  99 000e 0193     		str	r3, [sp, #4]
 100 0010 0F4B     		ldr	r3, .L9+4
 101 0012 0093     		str	r3, [sp]
 102 0014 0123     		movs	r3, #1
 103 0016 4022     		movs	r2, #64
 104 0018 7821     		movs	r1, #120
 105 001a 0E48     		ldr	r0, .L9+8
 106 001c FFF7FEFF 		bl	HAL_I2C_Mem_Write_DMA
 107              	.LVL3:
  53:Core/Src/oled.c **** 		oled_refresh = 1;
 108              		.loc 1 53 3 view .LVU11
 109              		.loc 1 53 16 is_stmt 0 view .LVU12
 110 0020 0A4B     		ldr	r3, .L9
 111 0022 0122     		movs	r2, #1
 112 0024 1A70     		strb	r2, [r3]
 113              	.L5:
  54:Core/Src/oled.c **** 	}
  55:Core/Src/oled.c **** 	else
  56:Core/Src/oled.c **** 	{
  57:Core/Src/oled.c **** 		//HAL_I2C_Mem_Write(&hi2c1 ,0x78,0x40,I2C_MEMADD_SIZE_8BIT,&data,1,0xff);
  58:Core/Src/oled.c **** 		HAL_I2C_Mem_Write_DMA(&hi2c1,OLED_2,0x40,I2C_MEMADD_SIZE_8BIT,OLED_2_data[0],1024);
  59:Core/Src/oled.c **** 		oled_refresh = 0;
  60:Core/Src/oled.c **** 	}
  61:Core/Src/oled.c **** }
ARM GAS  /tmp/ccAcRfab.s 			page 4


 114              		.loc 1 61 1 view .LVU13
 115 0026 03B0     		add	sp, sp, #12
 116              	.LCFI5:
 117              		.cfi_remember_state
 118              		.cfi_def_cfa_offset 4
 119              		@ sp needed
 120 0028 5DF804FB 		ldr	pc, [sp], #4
 121              	.L6:
 122              	.LCFI6:
 123              		.cfi_restore_state
  58:Core/Src/oled.c **** 		oled_refresh = 0;
 124              		.loc 1 58 3 is_stmt 1 view .LVU14
 125 002c 4FF48063 		mov	r3, #1024
 126 0030 0193     		str	r3, [sp, #4]
 127 0032 094B     		ldr	r3, .L9+12
 128 0034 0093     		str	r3, [sp]
 129 0036 0123     		movs	r3, #1
 130 0038 4022     		movs	r2, #64
 131 003a 7A21     		movs	r1, #122
 132 003c 0548     		ldr	r0, .L9+8
 133 003e FFF7FEFF 		bl	HAL_I2C_Mem_Write_DMA
 134              	.LVL4:
  59:Core/Src/oled.c **** 	}
 135              		.loc 1 59 3 view .LVU15
  59:Core/Src/oled.c **** 	}
 136              		.loc 1 59 16 is_stmt 0 view .LVU16
 137 0042 024B     		ldr	r3, .L9
 138 0044 0022     		movs	r2, #0
 139 0046 1A70     		strb	r2, [r3]
 140              		.loc 1 61 1 view .LVU17
 141 0048 EDE7     		b	.L5
 142              	.L10:
 143 004a 00BF     		.align	2
 144              	.L9:
 145 004c 00000000 		.word	.LANCHOR1
 146 0050 00000000 		.word	.LANCHOR2
 147 0054 00000000 		.word	hi2c1
 148 0058 00000000 		.word	.LANCHOR3
 149              		.cfi_endproc
 150              	.LFE131:
 152              		.section	.text.OLED_Init,"ax",%progbits
 153              		.align	1
 154              		.global	OLED_Init
 155              		.syntax unified
 156              		.thumb
 157              		.thumb_func
 158              		.fpu fpv4-sp-d16
 160              	OLED_Init:
 161              	.LFB132:
  62:Core/Src/oled.c **** 
  63:Core/Src/oled.c **** //初始化oled屏幕
  64:Core/Src/oled.c **** void OLED_Init(void)
  65:Core/Src/oled.c **** { 	
 162              		.loc 1 65 1 is_stmt 1 view -0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccAcRfab.s 			page 5


 166 0000 08B5     		push	{r3, lr}
 167              	.LCFI7:
 168              		.cfi_def_cfa_offset 8
 169              		.cfi_offset 3, -8
 170              		.cfi_offset 14, -4
  66:Core/Src/oled.c **** 	HAL_Delay(200);//这里的延时很重要
 171              		.loc 1 66 2 view .LVU19
 172 0002 C820     		movs	r0, #200
 173 0004 FFF7FEFF 		bl	HAL_Delay
 174              	.LVL5:
  67:Core/Src/oled.c **** 	WriteCmd(OLED_1);
 175              		.loc 1 67 2 view .LVU20
 176 0008 7820     		movs	r0, #120
 177 000a FFF7FEFF 		bl	WriteCmd
 178              	.LVL6:
  68:Core/Src/oled.c **** 	HAL_Delay(200);//这里的延时很重要
 179              		.loc 1 68 2 view .LVU21
 180 000e C820     		movs	r0, #200
 181 0010 FFF7FEFF 		bl	HAL_Delay
 182              	.LVL7:
  69:Core/Src/oled.c **** 	WriteCmd(OLED_2);
 183              		.loc 1 69 2 view .LVU22
 184 0014 7A20     		movs	r0, #122
 185 0016 FFF7FEFF 		bl	WriteCmd
 186              	.LVL8:
  70:Core/Src/oled.c **** }
 187              		.loc 1 70 1 is_stmt 0 view .LVU23
 188 001a 08BD     		pop	{r3, pc}
 189              		.cfi_endproc
 190              	.LFE132:
 192              		.section	.text.OLED_Clear,"ax",%progbits
 193              		.align	1
 194              		.global	OLED_Clear
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 198              		.fpu fpv4-sp-d16
 200              	OLED_Clear:
 201              	.LVL9:
 202              	.LFB133:
  71:Core/Src/oled.c **** //清屏
  72:Core/Src/oled.c **** void OLED_Clear(uint8_t ADDRESS)
  73:Core/Src/oled.c **** {
 203              		.loc 1 73 1 is_stmt 1 view -0
 204              		.cfi_startproc
 205              		@ args = 0, pretend = 0, frame = 0
 206              		@ frame_needed = 0, uses_anonymous_args = 0
 207              		@ link register save eliminated.
  74:Core/Src/oled.c **** 	uint8_t i,n;
 208              		.loc 1 74 2 view .LVU25
  75:Core/Src/oled.c **** 	
  76:Core/Src/oled.c **** 	if(ADDRESS == OLED_1)
 209              		.loc 1 76 2 view .LVU26
 210              		.loc 1 76 4 is_stmt 0 view .LVU27
 211 0000 7828     		cmp	r0, #120
 212 0002 12D0     		beq	.L27
  77:Core/Src/oled.c **** 	{
ARM GAS  /tmp/ccAcRfab.s 			page 6


  78:Core/Src/oled.c **** 		for(i=0;i<8;i++)  
  79:Core/Src/oled.c **** 		{  
  80:Core/Src/oled.c **** 			for(n=0;n<128;n++)
  81:Core/Src/oled.c **** 			OLED_1_data[i][n]=0;
  82:Core/Src/oled.c **** 		}
  83:Core/Src/oled.c **** 	}
  84:Core/Src/oled.c **** 	else if(ADDRESS == OLED_2)
 213              		.loc 1 84 7 is_stmt 1 view .LVU28
 214              		.loc 1 84 9 is_stmt 0 view .LVU29
 215 0004 7A28     		cmp	r0, #122
 216 0006 23D0     		beq	.L28
 217              	.LVL10:
 218              	.L13:
  85:Core/Src/oled.c **** 	{
  86:Core/Src/oled.c **** 		for(i=0;i<8;i++)  
  87:Core/Src/oled.c **** 		{  
  88:Core/Src/oled.c **** 			for(n=0;n<128;n++)
  89:Core/Src/oled.c **** 			OLED_2_data[i][n]=0;
  90:Core/Src/oled.c **** 		}
  91:Core/Src/oled.c **** 	}
  92:Core/Src/oled.c **** }
 219              		.loc 1 92 1 view .LVU30
 220 0008 7047     		bx	lr
 221              	.LVL11:
 222              	.L30:
  78:Core/Src/oled.c **** 		{  
 223              		.loc 1 78 15 is_stmt 1 discriminator 2 view .LVU31
  78:Core/Src/oled.c **** 		{  
 224              		.loc 1 78 16 is_stmt 0 discriminator 2 view .LVU32
 225 000a 0130     		adds	r0, r0, #1
 226              	.LVL12:
  78:Core/Src/oled.c **** 		{  
 227              		.loc 1 78 16 discriminator 2 view .LVU33
 228 000c C0B2     		uxtb	r0, r0
 229              	.LVL13:
 230              	.L14:
  78:Core/Src/oled.c **** 		{  
 231              		.loc 1 78 11 is_stmt 1 discriminator 1 view .LVU34
  78:Core/Src/oled.c **** 		{  
 232              		.loc 1 78 3 is_stmt 0 discriminator 1 view .LVU35
 233 000e 0728     		cmp	r0, #7
 234 0010 0DD8     		bhi	.L29
  80:Core/Src/oled.c **** 			OLED_1_data[i][n]=0;
 235              		.loc 1 80 9 view .LVU36
 236 0012 0023     		movs	r3, #0
 237              	.L17:
 238              	.LVL14:
  80:Core/Src/oled.c **** 			OLED_1_data[i][n]=0;
 239              		.loc 1 80 12 is_stmt 1 discriminator 1 view .LVU37
  80:Core/Src/oled.c **** 			OLED_1_data[i][n]=0;
 240              		.loc 1 80 4 is_stmt 0 discriminator 1 view .LVU38
 241 0014 13F0800F 		tst	r3, #128
 242 0018 F7D1     		bne	.L30
  81:Core/Src/oled.c **** 		}
 243              		.loc 1 81 4 is_stmt 1 discriminator 3 view .LVU39
  81:Core/Src/oled.c **** 		}
 244              		.loc 1 81 21 is_stmt 0 discriminator 3 view .LVU40
ARM GAS  /tmp/ccAcRfab.s 			page 7


 245 001a 0E4A     		ldr	r2, .L31
 246 001c 02EBC012 		add	r2, r2, r0, lsl #7
 247 0020 0021     		movs	r1, #0
 248 0022 D154     		strb	r1, [r2, r3]
  80:Core/Src/oled.c **** 			OLED_1_data[i][n]=0;
 249              		.loc 1 80 18 is_stmt 1 discriminator 3 view .LVU41
  80:Core/Src/oled.c **** 			OLED_1_data[i][n]=0;
 250              		.loc 1 80 19 is_stmt 0 discriminator 3 view .LVU42
 251 0024 0133     		adds	r3, r3, #1
 252              	.LVL15:
  80:Core/Src/oled.c **** 			OLED_1_data[i][n]=0;
 253              		.loc 1 80 19 discriminator 3 view .LVU43
 254 0026 DBB2     		uxtb	r3, r3
 255              	.LVL16:
  80:Core/Src/oled.c **** 			OLED_1_data[i][n]=0;
 256              		.loc 1 80 19 discriminator 3 view .LVU44
 257 0028 F4E7     		b	.L17
 258              	.LVL17:
 259              	.L27:
  78:Core/Src/oled.c **** 		{  
 260              		.loc 1 78 8 view .LVU45
 261 002a 0020     		movs	r0, #0
 262              	.LVL18:
  78:Core/Src/oled.c **** 		{  
 263              		.loc 1 78 8 view .LVU46
 264 002c EFE7     		b	.L14
 265              	.LVL19:
 266              	.L29:
  78:Core/Src/oled.c **** 		{  
 267              		.loc 1 78 8 view .LVU47
 268 002e 7047     		bx	lr
 269              	.LVL20:
 270              	.L20:
  89:Core/Src/oled.c **** 		}
 271              		.loc 1 89 4 is_stmt 1 discriminator 3 view .LVU48
  89:Core/Src/oled.c **** 		}
 272              		.loc 1 89 21 is_stmt 0 discriminator 3 view .LVU49
 273 0030 094A     		ldr	r2, .L31+4
 274 0032 02EBC012 		add	r2, r2, r0, lsl #7
 275 0036 0021     		movs	r1, #0
 276 0038 D154     		strb	r1, [r2, r3]
  88:Core/Src/oled.c **** 			OLED_2_data[i][n]=0;
 277              		.loc 1 88 18 is_stmt 1 discriminator 3 view .LVU50
  88:Core/Src/oled.c **** 			OLED_2_data[i][n]=0;
 278              		.loc 1 88 19 is_stmt 0 discriminator 3 view .LVU51
 279 003a 0133     		adds	r3, r3, #1
 280              	.LVL21:
  88:Core/Src/oled.c **** 			OLED_2_data[i][n]=0;
 281              		.loc 1 88 19 discriminator 3 view .LVU52
 282 003c DBB2     		uxtb	r3, r3
 283              	.LVL22:
 284              	.L21:
  88:Core/Src/oled.c **** 			OLED_2_data[i][n]=0;
 285              		.loc 1 88 12 is_stmt 1 discriminator 1 view .LVU53
  88:Core/Src/oled.c **** 			OLED_2_data[i][n]=0;
 286              		.loc 1 88 4 is_stmt 0 discriminator 1 view .LVU54
 287 003e 13F0800F 		tst	r3, #128
ARM GAS  /tmp/ccAcRfab.s 			page 8


 288 0042 F5D0     		beq	.L20
  86:Core/Src/oled.c **** 		{  
 289              		.loc 1 86 15 is_stmt 1 discriminator 2 view .LVU55
  86:Core/Src/oled.c **** 		{  
 290              		.loc 1 86 16 is_stmt 0 discriminator 2 view .LVU56
 291 0044 0130     		adds	r0, r0, #1
 292              	.LVL23:
  86:Core/Src/oled.c **** 		{  
 293              		.loc 1 86 16 discriminator 2 view .LVU57
 294 0046 C0B2     		uxtb	r0, r0
 295              	.LVL24:
 296              	.L19:
  86:Core/Src/oled.c **** 		{  
 297              		.loc 1 86 11 is_stmt 1 discriminator 1 view .LVU58
  86:Core/Src/oled.c **** 		{  
 298              		.loc 1 86 3 is_stmt 0 discriminator 1 view .LVU59
 299 0048 0728     		cmp	r0, #7
 300 004a DDD8     		bhi	.L13
  88:Core/Src/oled.c **** 			OLED_2_data[i][n]=0;
 301              		.loc 1 88 9 view .LVU60
 302 004c 0023     		movs	r3, #0
 303 004e F6E7     		b	.L21
 304              	.LVL25:
 305              	.L28:
  86:Core/Src/oled.c **** 		{  
 306              		.loc 1 86 8 view .LVU61
 307 0050 0020     		movs	r0, #0
 308              	.LVL26:
  86:Core/Src/oled.c **** 		{  
 309              		.loc 1 86 8 view .LVU62
 310 0052 F9E7     		b	.L19
 311              	.L32:
 312              		.align	2
 313              	.L31:
 314 0054 00000000 		.word	.LANCHOR2
 315 0058 00000000 		.word	.LANCHOR3
 316              		.cfi_endproc
 317              	.LFE133:
 319              		.section	.text.oled_pow,"ax",%progbits
 320              		.align	1
 321              		.global	oled_pow
 322              		.syntax unified
 323              		.thumb
 324              		.thumb_func
 325              		.fpu fpv4-sp-d16
 327              	oled_pow:
 328              	.LVL27:
 329              	.LFB134:
  93:Core/Src/oled.c **** 
  94:Core/Src/oled.c **** unsigned int oled_pow(uint8_t m,uint8_t n)
  95:Core/Src/oled.c **** {
 330              		.loc 1 95 1 is_stmt 1 view -0
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 0
 333              		@ frame_needed = 0, uses_anonymous_args = 0
 334              		@ link register save eliminated.
 335              		.loc 1 95 1 is_stmt 0 view .LVU64
ARM GAS  /tmp/ccAcRfab.s 			page 9


 336 0000 0246     		mov	r2, r0
  96:Core/Src/oled.c **** 	unsigned int result=1;	 
 337              		.loc 1 96 2 is_stmt 1 view .LVU65
 338              	.LVL28:
  97:Core/Src/oled.c **** 	while(n--)result*=m;    
 339              		.loc 1 97 2 view .LVU66
  96:Core/Src/oled.c **** 	unsigned int result=1;	 
 340              		.loc 1 96 15 is_stmt 0 view .LVU67
 341 0002 0120     		movs	r0, #1
 342              	.LVL29:
 343              	.L34:
 344              		.loc 1 97 7 is_stmt 1 discriminator 1 view .LVU68
 345              		.loc 1 97 9 is_stmt 0 discriminator 1 view .LVU69
 346 0004 4B1E     		subs	r3, r1, #1
 347 0006 DBB2     		uxtb	r3, r3
 348              	.LVL30:
 349              		.loc 1 97 7 discriminator 1 view .LVU70
 350 0008 19B1     		cbz	r1, .L36
 351              		.loc 1 97 12 is_stmt 1 discriminator 2 view .LVU71
 352              		.loc 1 97 18 is_stmt 0 discriminator 2 view .LVU72
 353 000a 02FB00F0 		mul	r0, r2, r0
 354              	.LVL31:
 355              		.loc 1 97 9 discriminator 2 view .LVU73
 356 000e 1946     		mov	r1, r3
 357 0010 F8E7     		b	.L34
 358              	.L36:
  98:Core/Src/oled.c **** 	return result;
  99:Core/Src/oled.c **** }
 359              		.loc 1 99 1 view .LVU74
 360 0012 7047     		bx	lr
 361              		.cfi_endproc
 362              	.LFE134:
 364              		.section	.text.OLED_ShowChar,"ax",%progbits
 365              		.align	1
 366              		.global	OLED_ShowChar
 367              		.syntax unified
 368              		.thumb
 369              		.thumb_func
 370              		.fpu fpv4-sp-d16
 372              	OLED_ShowChar:
 373              	.LVL32:
 374              	.LFB136:
 100:Core/Src/oled.c **** //显示2个数字
 101:Core/Src/oled.c **** //x,y :起点坐标	 
 102:Core/Src/oled.c **** //len :数字的位数
 103:Core/Src/oled.c **** //size:字体大小
 104:Core/Src/oled.c **** //mode:模式	0,填充模式;1,叠加模式
 105:Core/Src/oled.c **** //num:数值(0~4294967295);	 		  
 106:Core/Src/oled.c **** void OLED_ShowNum(uint8_t ADDRESS,uint8_t x,uint8_t y,unsigned int num,uint8_t len,uint8_t size2)
 107:Core/Src/oled.c **** {         	
 108:Core/Src/oled.c **** 	uint8_t t,temp;
 109:Core/Src/oled.c **** 	uint8_t enshow=0;						   
 110:Core/Src/oled.c **** 	for(t=0;t<len;t++)
 111:Core/Src/oled.c **** 	{
 112:Core/Src/oled.c **** 		temp=(num/oled_pow(10,len-t-1))%10;
 113:Core/Src/oled.c **** 		if(enshow==0&&t<(len-1))
 114:Core/Src/oled.c **** 		{
ARM GAS  /tmp/ccAcRfab.s 			page 10


 115:Core/Src/oled.c **** 			if(temp==0)
 116:Core/Src/oled.c **** 			{
 117:Core/Src/oled.c **** 				OLED_ShowChar(ADDRESS,x+(size2/2)*t,y,' ',size2,0);
 118:Core/Src/oled.c **** 				continue;
 119:Core/Src/oled.c **** 			}else enshow=1; 
 120:Core/Src/oled.c **** 		 	 
 121:Core/Src/oled.c **** 		}
 122:Core/Src/oled.c **** 	 	OLED_ShowChar(ADDRESS,x+(size2/2)*t,y,temp+'0',size2,0); 
 123:Core/Src/oled.c **** 	}
 124:Core/Src/oled.c **** } 
 125:Core/Src/oled.c **** //在指定位置显示一个字符,包括部分字符
 126:Core/Src/oled.c **** //x:0~127
 127:Core/Src/oled.c **** //y:0~63
 128:Core/Src/oled.c **** //mode:0,反白显示;1,正常显示				 
 129:Core/Src/oled.c **** //size:选择字体 16/12 
 130:Core/Src/oled.c **** void OLED_ShowChar(uint8_t ADDRESS,uint8_t x,uint8_t y,char chr,uint8_t Char_Size,uint8_t Is_Revers
 131:Core/Src/oled.c **** {      	
 375              		.loc 1 131 1 is_stmt 1 view -0
 376              		.cfi_startproc
 377              		@ args = 8, pretend = 0, frame = 0
 378              		@ frame_needed = 0, uses_anonymous_args = 0
 379              		.loc 1 131 1 is_stmt 0 view .LVU76
 380 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 381              	.LCFI8:
 382              		.cfi_def_cfa_offset 20
 383              		.cfi_offset 4, -20
 384              		.cfi_offset 5, -16
 385              		.cfi_offset 6, -12
 386              		.cfi_offset 7, -8
 387              		.cfi_offset 14, -4
 388 0002 9DF81450 		ldrb	r5, [sp, #20]	@ zero_extendqisi2
 389 0006 9DF81840 		ldrb	r4, [sp, #24]	@ zero_extendqisi2
 132:Core/Src/oled.c **** 	unsigned char c=0,i=0;
 390              		.loc 1 132 2 is_stmt 1 view .LVU77
 391              	.LVL33:
 133:Core/Src/oled.c **** 	
 134:Core/Src/oled.c **** 	c=chr-' ';//得到偏移后的值
 392              		.loc 1 134 2 view .LVU78
 393              		.loc 1 134 3 is_stmt 0 view .LVU79
 394 000a 203B     		subs	r3, r3, #32
 395              	.LVL34:
 396              		.loc 1 134 3 view .LVU80
 397 000c DBB2     		uxtb	r3, r3
 398              	.LVL35:
 135:Core/Src/oled.c **** 	
 136:Core/Src/oled.c **** 	if(x>128-1)
 399              		.loc 1 136 2 is_stmt 1 view .LVU81
 400              		.loc 1 136 4 is_stmt 0 view .LVU82
 401 000e 11F0800F 		tst	r1, #128
 402 0012 04D1     		bne	.L60
 403              	.LVL36:
 404              	.L38:
 137:Core/Src/oled.c **** 	{
 138:Core/Src/oled.c **** 		x=0;
 139:Core/Src/oled.c **** 		y=y+2;
 140:Core/Src/oled.c **** 	}
 141:Core/Src/oled.c **** 	
ARM GAS  /tmp/ccAcRfab.s 			page 11


 142:Core/Src/oled.c **** 	if(ADDRESS == OLED_1)
 405              		.loc 1 142 2 is_stmt 1 view .LVU83
 406              		.loc 1 142 4 is_stmt 0 view .LVU84
 407 0014 7828     		cmp	r0, #120
 408 0016 06D0     		beq	.L61
 143:Core/Src/oled.c **** 	{
 144:Core/Src/oled.c **** 		if(Char_Size ==16)
 145:Core/Src/oled.c **** 		{
 146:Core/Src/oled.c **** 			if(Is_Reverse==0)
 147:Core/Src/oled.c **** 			{
 148:Core/Src/oled.c **** 				for(i=0;i<8;i++)
 149:Core/Src/oled.c **** 				{
 150:Core/Src/oled.c **** 					OLED_1_data[y][x+i] = F8X16[c*16+i];		
 151:Core/Src/oled.c **** 					OLED_1_data[y+1][x+i] = F8X16[c*16+i+8];	
 152:Core/Src/oled.c **** 				}
 153:Core/Src/oled.c **** 			}
 154:Core/Src/oled.c **** 			else
 155:Core/Src/oled.c **** 			{
 156:Core/Src/oled.c **** 				OLED_1_data[y][x+i] = ~F8X16[c*16+i];		
 157:Core/Src/oled.c **** 				OLED_1_data[y+1][x+i] = ~F8X16[c*16+i+8];				
 158:Core/Src/oled.c **** 			}
 159:Core/Src/oled.c **** 		}
 160:Core/Src/oled.c **** 		else
 161:Core/Src/oled.c **** 		{
 162:Core/Src/oled.c **** 			if(Is_Reverse==0)
 163:Core/Src/oled.c **** 			{
 164:Core/Src/oled.c **** 				for(i=0;i<6;i++)
 165:Core/Src/oled.c **** 				OLED_1_data[y][x+i] = F6x8[c][i];
 166:Core/Src/oled.c **** 			}
 167:Core/Src/oled.c **** 			else
 168:Core/Src/oled.c **** 			{
 169:Core/Src/oled.c **** 				for(i=0;i<6;i++)
 170:Core/Src/oled.c **** 				OLED_1_data[y][x+i] = ~F6x8[c][i];
 171:Core/Src/oled.c **** 			}
 172:Core/Src/oled.c **** 		}
 173:Core/Src/oled.c **** 	}
 174:Core/Src/oled.c **** 	else if(ADDRESS == OLED_2)
 409              		.loc 1 174 7 is_stmt 1 view .LVU85
 410              		.loc 1 174 9 is_stmt 0 view .LVU86
 411 0018 7A28     		cmp	r0, #122
 412 001a 54D0     		beq	.L62
 413              	.LVL37:
 414              	.L37:
 175:Core/Src/oled.c **** 	{
 176:Core/Src/oled.c **** 		if(Char_Size ==16)
 177:Core/Src/oled.c **** 		{
 178:Core/Src/oled.c **** 			if(Is_Reverse==0)
 179:Core/Src/oled.c **** 			{
 180:Core/Src/oled.c **** 				for(i=0;i<8;i++)
 181:Core/Src/oled.c **** 				{
 182:Core/Src/oled.c **** 					OLED_2_data[y][x+i] = F8X16[c*16+i];		
 183:Core/Src/oled.c **** 					OLED_2_data[y+1][x+i] = F8X16[c*16+i+8];	
 184:Core/Src/oled.c **** 				}
 185:Core/Src/oled.c **** 			}
 186:Core/Src/oled.c **** 			else
 187:Core/Src/oled.c **** 			{
 188:Core/Src/oled.c **** 				OLED_2_data[y][x+i] = ~F8X16[c*16+i];		
ARM GAS  /tmp/ccAcRfab.s 			page 12


 189:Core/Src/oled.c **** 				OLED_2_data[y+1][x+i] = ~F8X16[c*16+i+8];				
 190:Core/Src/oled.c **** 			}
 191:Core/Src/oled.c **** 		}
 192:Core/Src/oled.c **** 		else
 193:Core/Src/oled.c **** 		{
 194:Core/Src/oled.c **** 			if(Is_Reverse==0)
 195:Core/Src/oled.c **** 			{
 196:Core/Src/oled.c **** 				for(i=0;i<6;i++)
 197:Core/Src/oled.c **** 				OLED_2_data[y][x+i] = F6x8[c][i];
 198:Core/Src/oled.c **** 			}
 199:Core/Src/oled.c **** 			else
 200:Core/Src/oled.c **** 			{
 201:Core/Src/oled.c **** 				for(i=0;i<6;i++)
 202:Core/Src/oled.c **** 				OLED_2_data[y][x+i] = ~F6x8[c][i];
 203:Core/Src/oled.c **** 			}
 204:Core/Src/oled.c **** 		}
 205:Core/Src/oled.c **** 	}
 206:Core/Src/oled.c **** }
 415              		.loc 1 206 1 view .LVU87
 416 001c F0BD     		pop	{r4, r5, r6, r7, pc}
 417              	.LVL38:
 418              	.L60:
 138:Core/Src/oled.c **** 		y=y+2;
 419              		.loc 1 138 3 is_stmt 1 view .LVU88
 139:Core/Src/oled.c **** 	}
 420              		.loc 1 139 3 view .LVU89
 139:Core/Src/oled.c **** 	}
 421              		.loc 1 139 4 is_stmt 0 view .LVU90
 422 001e 0232     		adds	r2, r2, #2
 423              	.LVL39:
 139:Core/Src/oled.c **** 	}
 424              		.loc 1 139 4 view .LVU91
 425 0020 D2B2     		uxtb	r2, r2
 426              	.LVL40:
 138:Core/Src/oled.c **** 		y=y+2;
 427              		.loc 1 138 4 view .LVU92
 428 0022 0021     		movs	r1, #0
 429 0024 F6E7     		b	.L38
 430              	.LVL41:
 431              	.L61:
 144:Core/Src/oled.c **** 		{
 432              		.loc 1 144 3 is_stmt 1 view .LVU93
 144:Core/Src/oled.c **** 		{
 433              		.loc 1 144 5 is_stmt 0 view .LVU94
 434 0026 102D     		cmp	r5, #16
 435 0028 13D0     		beq	.L63
 162:Core/Src/oled.c **** 			{
 436              		.loc 1 162 4 is_stmt 1 view .LVU95
 162:Core/Src/oled.c **** 			{
 437              		.loc 1 162 6 is_stmt 0 view .LVU96
 438 002a 002C     		cmp	r4, #0
 439 002c 3BD0     		beq	.L45
 169:Core/Src/oled.c **** 				OLED_1_data[y][x+i] = ~F6x8[c][i];
 440              		.loc 1 169 10 view .LVU97
 441 002e 0020     		movs	r0, #0
 442              	.LVL42:
 443              	.L46:
ARM GAS  /tmp/ccAcRfab.s 			page 13


 169:Core/Src/oled.c **** 				OLED_1_data[y][x+i] = ~F6x8[c][i];
 444              		.loc 1 169 13 is_stmt 1 discriminator 1 view .LVU98
 169:Core/Src/oled.c **** 				OLED_1_data[y][x+i] = ~F6x8[c][i];
 445              		.loc 1 169 5 is_stmt 0 discriminator 1 view .LVU99
 446 0030 0528     		cmp	r0, #5
 447 0032 F3D8     		bhi	.L37
 170:Core/Src/oled.c **** 			}
 448              		.loc 1 170 5 is_stmt 1 discriminator 3 view .LVU100
 170:Core/Src/oled.c **** 			}
 449              		.loc 1 170 35 is_stmt 0 discriminator 3 view .LVU101
 450 0034 03EB4304 		add	r4, r3, r3, lsl #1
 451 0038 4B4D     		ldr	r5, .L65
 452 003a 05EB4404 		add	r4, r5, r4, lsl #1
 453 003e 255C     		ldrb	r5, [r4, r0]	@ zero_extendqisi2
 170:Core/Src/oled.c **** 			}
 454              		.loc 1 170 21 discriminator 3 view .LVU102
 455 0040 0E18     		adds	r6, r1, r0
 170:Core/Src/oled.c **** 			}
 456              		.loc 1 170 25 discriminator 3 view .LVU103
 457 0042 4A4C     		ldr	r4, .L65+4
 458 0044 04EBC214 		add	r4, r4, r2, lsl #7
 459 0048 ED43     		mvns	r5, r5
 460 004a A555     		strb	r5, [r4, r6]
 169:Core/Src/oled.c **** 				OLED_1_data[y][x+i] = ~F6x8[c][i];
 461              		.loc 1 169 17 is_stmt 1 discriminator 3 view .LVU104
 169:Core/Src/oled.c **** 				OLED_1_data[y][x+i] = ~F6x8[c][i];
 462              		.loc 1 169 18 is_stmt 0 discriminator 3 view .LVU105
 463 004c 0130     		adds	r0, r0, #1
 464              	.LVL43:
 169:Core/Src/oled.c **** 				OLED_1_data[y][x+i] = ~F6x8[c][i];
 465              		.loc 1 169 18 discriminator 3 view .LVU106
 466 004e C0B2     		uxtb	r0, r0
 467              	.LVL44:
 169:Core/Src/oled.c **** 				OLED_1_data[y][x+i] = ~F6x8[c][i];
 468              		.loc 1 169 18 discriminator 3 view .LVU107
 469 0050 EEE7     		b	.L46
 470              	.LVL45:
 471              	.L63:
 146:Core/Src/oled.c **** 			{
 472              		.loc 1 146 4 is_stmt 1 view .LVU108
 146:Core/Src/oled.c **** 			{
 473              		.loc 1 146 6 is_stmt 0 view .LVU109
 474 0052 2CB3     		cbz	r4, .L41
 156:Core/Src/oled.c **** 				OLED_1_data[y+1][x+i] = ~F8X16[c*16+i+8];				
 475              		.loc 1 156 5 is_stmt 1 view .LVU110
 156:Core/Src/oled.c **** 				OLED_1_data[y+1][x+i] = ~F8X16[c*16+i+8];				
 476              		.loc 1 156 35 is_stmt 0 view .LVU111
 477 0054 1B01     		lsls	r3, r3, #4
 478              	.LVL46:
 156:Core/Src/oled.c **** 				OLED_1_data[y+1][x+i] = ~F8X16[c*16+i+8];				
 479              		.loc 1 156 33 view .LVU112
 480 0056 464D     		ldr	r5, .L65+8
 481 0058 EC5C     		ldrb	r4, [r5, r3]	@ zero_extendqisi2
 156:Core/Src/oled.c **** 				OLED_1_data[y+1][x+i] = ~F8X16[c*16+i+8];				
 482              		.loc 1 156 25 view .LVU113
 483 005a 4448     		ldr	r0, .L65+4
 484              	.LVL47:
ARM GAS  /tmp/ccAcRfab.s 			page 14


 156:Core/Src/oled.c **** 				OLED_1_data[y+1][x+i] = ~F8X16[c*16+i+8];				
 485              		.loc 1 156 25 view .LVU114
 486 005c 00EBC216 		add	r6, r0, r2, lsl #7
 487 0060 E443     		mvns	r4, r4
 488 0062 7454     		strb	r4, [r6, r1]
 157:Core/Src/oled.c **** 			}
 489              		.loc 1 157 5 is_stmt 1 view .LVU115
 157:Core/Src/oled.c **** 			}
 490              		.loc 1 157 42 is_stmt 0 view .LVU116
 491 0064 0833     		adds	r3, r3, #8
 157:Core/Src/oled.c **** 			}
 492              		.loc 1 157 35 view .LVU117
 493 0066 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 157:Core/Src/oled.c **** 			}
 494              		.loc 1 157 18 view .LVU118
 495 0068 0132     		adds	r2, r2, #1
 496              	.LVL48:
 157:Core/Src/oled.c **** 			}
 497              		.loc 1 157 27 view .LVU119
 498 006a 00EBC210 		add	r0, r0, r2, lsl #7
 499 006e DB43     		mvns	r3, r3
 500 0070 4354     		strb	r3, [r0, r1]
 501 0072 D3E7     		b	.L37
 502              	.LVL49:
 503              	.L43:
 150:Core/Src/oled.c **** 					OLED_1_data[y+1][x+i] = F8X16[c*16+i+8];	
 504              		.loc 1 150 6 is_stmt 1 discriminator 3 view .LVU120
 150:Core/Src/oled.c **** 					OLED_1_data[y+1][x+i] = F8X16[c*16+i+8];	
 505              		.loc 1 150 38 is_stmt 0 discriminator 3 view .LVU121
 506 0074 04EB0315 		add	r5, r4, r3, lsl #4
 150:Core/Src/oled.c **** 					OLED_1_data[y+1][x+i] = F8X16[c*16+i+8];	
 507              		.loc 1 150 22 discriminator 3 view .LVU122
 508 0078 0F19     		adds	r7, r1, r4
 150:Core/Src/oled.c **** 					OLED_1_data[y+1][x+i] = F8X16[c*16+i+8];	
 509              		.loc 1 150 33 discriminator 3 view .LVU123
 510 007a DFF8F4C0 		ldr	ip, .L65+8
 511 007e 1CF805E0 		ldrb	lr, [ip, r5]	@ zero_extendqisi2
 150:Core/Src/oled.c **** 					OLED_1_data[y+1][x+i] = F8X16[c*16+i+8];	
 512              		.loc 1 150 26 discriminator 3 view .LVU124
 513 0082 3A48     		ldr	r0, .L65+4
 514 0084 00EBC216 		add	r6, r0, r2, lsl #7
 515 0088 06F807E0 		strb	lr, [r6, r7]
 151:Core/Src/oled.c **** 				}
 516              		.loc 1 151 6 is_stmt 1 discriminator 3 view .LVU125
 151:Core/Src/oled.c **** 				}
 517              		.loc 1 151 42 is_stmt 0 discriminator 3 view .LVU126
 518 008c 0835     		adds	r5, r5, #8
 151:Core/Src/oled.c **** 				}
 519              		.loc 1 151 19 discriminator 3 view .LVU127
 520 008e 561C     		adds	r6, r2, #1
 151:Core/Src/oled.c **** 				}
 521              		.loc 1 151 35 discriminator 3 view .LVU128
 522 0090 1CF805C0 		ldrb	ip, [ip, r5]	@ zero_extendqisi2
 151:Core/Src/oled.c **** 				}
 523              		.loc 1 151 28 discriminator 3 view .LVU129
 524 0094 00EBC610 		add	r0, r0, r6, lsl #7
 525 0098 00F807C0 		strb	ip, [r0, r7]
ARM GAS  /tmp/ccAcRfab.s 			page 15


 148:Core/Src/oled.c **** 				{
 526              		.loc 1 148 17 is_stmt 1 discriminator 3 view .LVU130
 148:Core/Src/oled.c **** 				{
 527              		.loc 1 148 18 is_stmt 0 discriminator 3 view .LVU131
 528 009c 0134     		adds	r4, r4, #1
 529              	.LVL50:
 148:Core/Src/oled.c **** 				{
 530              		.loc 1 148 18 discriminator 3 view .LVU132
 531 009e E4B2     		uxtb	r4, r4
 532              	.LVL51:
 533              	.L41:
 148:Core/Src/oled.c **** 				{
 534              		.loc 1 148 13 is_stmt 1 discriminator 1 view .LVU133
 148:Core/Src/oled.c **** 				{
 535              		.loc 1 148 5 is_stmt 0 discriminator 1 view .LVU134
 536 00a0 072C     		cmp	r4, #7
 537 00a2 E7D9     		bls	.L43
 538 00a4 BAE7     		b	.L37
 539              	.LVL52:
 540              	.L45:
 164:Core/Src/oled.c **** 				OLED_1_data[y][x+i] = F6x8[c][i];
 541              		.loc 1 164 13 is_stmt 1 discriminator 1 view .LVU135
 164:Core/Src/oled.c **** 				OLED_1_data[y][x+i] = F6x8[c][i];
 542              		.loc 1 164 5 is_stmt 0 discriminator 1 view .LVU136
 543 00a6 052C     		cmp	r4, #5
 544 00a8 B8D8     		bhi	.L37
 165:Core/Src/oled.c **** 			}
 545              		.loc 1 165 5 is_stmt 1 discriminator 3 view .LVU137
 165:Core/Src/oled.c **** 			}
 546              		.loc 1 165 21 is_stmt 0 discriminator 3 view .LVU138
 547 00aa 0E19     		adds	r6, r1, r4
 165:Core/Src/oled.c **** 			}
 548              		.loc 1 165 34 discriminator 3 view .LVU139
 549 00ac 03EB4300 		add	r0, r3, r3, lsl #1
 550 00b0 2D4D     		ldr	r5, .L65
 551 00b2 05EB4000 		add	r0, r5, r0, lsl #1
 552 00b6 055D     		ldrb	r5, [r0, r4]	@ zero_extendqisi2
 165:Core/Src/oled.c **** 			}
 553              		.loc 1 165 25 discriminator 3 view .LVU140
 554 00b8 2C48     		ldr	r0, .L65+4
 555 00ba 00EBC210 		add	r0, r0, r2, lsl #7
 556 00be 8555     		strb	r5, [r0, r6]
 164:Core/Src/oled.c **** 				OLED_1_data[y][x+i] = F6x8[c][i];
 557              		.loc 1 164 17 is_stmt 1 discriminator 3 view .LVU141
 164:Core/Src/oled.c **** 				OLED_1_data[y][x+i] = F6x8[c][i];
 558              		.loc 1 164 18 is_stmt 0 discriminator 3 view .LVU142
 559 00c0 0134     		adds	r4, r4, #1
 560              	.LVL53:
 164:Core/Src/oled.c **** 				OLED_1_data[y][x+i] = F6x8[c][i];
 561              		.loc 1 164 18 discriminator 3 view .LVU143
 562 00c2 E4B2     		uxtb	r4, r4
 563              	.LVL54:
 164:Core/Src/oled.c **** 				OLED_1_data[y][x+i] = F6x8[c][i];
 564              		.loc 1 164 18 discriminator 3 view .LVU144
 565 00c4 EFE7     		b	.L45
 566              	.LVL55:
 567              	.L62:
ARM GAS  /tmp/ccAcRfab.s 			page 16


 176:Core/Src/oled.c **** 		{
 568              		.loc 1 176 3 is_stmt 1 view .LVU145
 176:Core/Src/oled.c **** 		{
 569              		.loc 1 176 5 is_stmt 0 view .LVU146
 570 00c6 102D     		cmp	r5, #16
 571 00c8 13D0     		beq	.L64
 194:Core/Src/oled.c **** 			{
 572              		.loc 1 194 4 is_stmt 1 view .LVU147
 194:Core/Src/oled.c **** 			{
 573              		.loc 1 194 6 is_stmt 0 view .LVU148
 574 00ca 002C     		cmp	r4, #0
 575 00cc 3BD0     		beq	.L53
 201:Core/Src/oled.c **** 				OLED_2_data[y][x+i] = ~F6x8[c][i];
 576              		.loc 1 201 10 view .LVU149
 577 00ce 0020     		movs	r0, #0
 578              	.LVL56:
 579              	.L54:
 201:Core/Src/oled.c **** 				OLED_2_data[y][x+i] = ~F6x8[c][i];
 580              		.loc 1 201 13 is_stmt 1 discriminator 1 view .LVU150
 201:Core/Src/oled.c **** 				OLED_2_data[y][x+i] = ~F6x8[c][i];
 581              		.loc 1 201 5 is_stmt 0 discriminator 1 view .LVU151
 582 00d0 0528     		cmp	r0, #5
 583 00d2 A3D8     		bhi	.L37
 202:Core/Src/oled.c **** 			}
 584              		.loc 1 202 5 is_stmt 1 discriminator 3 view .LVU152
 202:Core/Src/oled.c **** 			}
 585              		.loc 1 202 35 is_stmt 0 discriminator 3 view .LVU153
 586 00d4 03EB4304 		add	r4, r3, r3, lsl #1
 587 00d8 234D     		ldr	r5, .L65
 588 00da 05EB4404 		add	r4, r5, r4, lsl #1
 589 00de 255C     		ldrb	r5, [r4, r0]	@ zero_extendqisi2
 202:Core/Src/oled.c **** 			}
 590              		.loc 1 202 21 discriminator 3 view .LVU154
 591 00e0 0E18     		adds	r6, r1, r0
 202:Core/Src/oled.c **** 			}
 592              		.loc 1 202 25 discriminator 3 view .LVU155
 593 00e2 244C     		ldr	r4, .L65+12
 594 00e4 04EBC214 		add	r4, r4, r2, lsl #7
 595 00e8 ED43     		mvns	r5, r5
 596 00ea A555     		strb	r5, [r4, r6]
 201:Core/Src/oled.c **** 				OLED_2_data[y][x+i] = ~F6x8[c][i];
 597              		.loc 1 201 17 is_stmt 1 discriminator 3 view .LVU156
 201:Core/Src/oled.c **** 				OLED_2_data[y][x+i] = ~F6x8[c][i];
 598              		.loc 1 201 18 is_stmt 0 discriminator 3 view .LVU157
 599 00ec 0130     		adds	r0, r0, #1
 600              	.LVL57:
 201:Core/Src/oled.c **** 				OLED_2_data[y][x+i] = ~F6x8[c][i];
 601              		.loc 1 201 18 discriminator 3 view .LVU158
 602 00ee C0B2     		uxtb	r0, r0
 603              	.LVL58:
 201:Core/Src/oled.c **** 				OLED_2_data[y][x+i] = ~F6x8[c][i];
 604              		.loc 1 201 18 discriminator 3 view .LVU159
 605 00f0 EEE7     		b	.L54
 606              	.LVL59:
 607              	.L64:
 178:Core/Src/oled.c **** 			{
 608              		.loc 1 178 4 is_stmt 1 view .LVU160
ARM GAS  /tmp/ccAcRfab.s 			page 17


 178:Core/Src/oled.c **** 			{
 609              		.loc 1 178 6 is_stmt 0 view .LVU161
 610 00f2 2CB3     		cbz	r4, .L50
 188:Core/Src/oled.c **** 				OLED_2_data[y+1][x+i] = ~F8X16[c*16+i+8];				
 611              		.loc 1 188 5 is_stmt 1 view .LVU162
 188:Core/Src/oled.c **** 				OLED_2_data[y+1][x+i] = ~F8X16[c*16+i+8];				
 612              		.loc 1 188 35 is_stmt 0 view .LVU163
 613 00f4 1B01     		lsls	r3, r3, #4
 614              	.LVL60:
 188:Core/Src/oled.c **** 				OLED_2_data[y+1][x+i] = ~F8X16[c*16+i+8];				
 615              		.loc 1 188 33 view .LVU164
 616 00f6 1E4D     		ldr	r5, .L65+8
 617 00f8 EC5C     		ldrb	r4, [r5, r3]	@ zero_extendqisi2
 188:Core/Src/oled.c **** 				OLED_2_data[y+1][x+i] = ~F8X16[c*16+i+8];				
 618              		.loc 1 188 25 view .LVU165
 619 00fa 1E48     		ldr	r0, .L65+12
 620              	.LVL61:
 188:Core/Src/oled.c **** 				OLED_2_data[y+1][x+i] = ~F8X16[c*16+i+8];				
 621              		.loc 1 188 25 view .LVU166
 622 00fc 00EBC216 		add	r6, r0, r2, lsl #7
 623 0100 E443     		mvns	r4, r4
 624 0102 7454     		strb	r4, [r6, r1]
 189:Core/Src/oled.c **** 			}
 625              		.loc 1 189 5 is_stmt 1 view .LVU167
 189:Core/Src/oled.c **** 			}
 626              		.loc 1 189 42 is_stmt 0 view .LVU168
 627 0104 0833     		adds	r3, r3, #8
 189:Core/Src/oled.c **** 			}
 628              		.loc 1 189 35 view .LVU169
 629 0106 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 189:Core/Src/oled.c **** 			}
 630              		.loc 1 189 18 view .LVU170
 631 0108 0132     		adds	r2, r2, #1
 632              	.LVL62:
 189:Core/Src/oled.c **** 			}
 633              		.loc 1 189 27 view .LVU171
 634 010a 00EBC210 		add	r0, r0, r2, lsl #7
 635 010e DB43     		mvns	r3, r3
 636 0110 4354     		strb	r3, [r0, r1]
 637 0112 83E7     		b	.L37
 638              	.LVL63:
 639              	.L52:
 182:Core/Src/oled.c **** 					OLED_2_data[y+1][x+i] = F8X16[c*16+i+8];	
 640              		.loc 1 182 6 is_stmt 1 discriminator 3 view .LVU172
 182:Core/Src/oled.c **** 					OLED_2_data[y+1][x+i] = F8X16[c*16+i+8];	
 641              		.loc 1 182 38 is_stmt 0 discriminator 3 view .LVU173
 642 0114 04EB0315 		add	r5, r4, r3, lsl #4
 182:Core/Src/oled.c **** 					OLED_2_data[y+1][x+i] = F8X16[c*16+i+8];	
 643              		.loc 1 182 22 discriminator 3 view .LVU174
 644 0118 0F19     		adds	r7, r1, r4
 182:Core/Src/oled.c **** 					OLED_2_data[y+1][x+i] = F8X16[c*16+i+8];	
 645              		.loc 1 182 33 discriminator 3 view .LVU175
 646 011a DFF854C0 		ldr	ip, .L65+8
 647 011e 1CF805E0 		ldrb	lr, [ip, r5]	@ zero_extendqisi2
 182:Core/Src/oled.c **** 					OLED_2_data[y+1][x+i] = F8X16[c*16+i+8];	
 648              		.loc 1 182 26 discriminator 3 view .LVU176
 649 0122 1448     		ldr	r0, .L65+12
ARM GAS  /tmp/ccAcRfab.s 			page 18


 650 0124 00EBC216 		add	r6, r0, r2, lsl #7
 651 0128 06F807E0 		strb	lr, [r6, r7]
 183:Core/Src/oled.c **** 				}
 652              		.loc 1 183 6 is_stmt 1 discriminator 3 view .LVU177
 183:Core/Src/oled.c **** 				}
 653              		.loc 1 183 42 is_stmt 0 discriminator 3 view .LVU178
 654 012c 0835     		adds	r5, r5, #8
 183:Core/Src/oled.c **** 				}
 655              		.loc 1 183 19 discriminator 3 view .LVU179
 656 012e 561C     		adds	r6, r2, #1
 183:Core/Src/oled.c **** 				}
 657              		.loc 1 183 35 discriminator 3 view .LVU180
 658 0130 1CF805C0 		ldrb	ip, [ip, r5]	@ zero_extendqisi2
 183:Core/Src/oled.c **** 				}
 659              		.loc 1 183 28 discriminator 3 view .LVU181
 660 0134 00EBC610 		add	r0, r0, r6, lsl #7
 661 0138 00F807C0 		strb	ip, [r0, r7]
 180:Core/Src/oled.c **** 				{
 662              		.loc 1 180 17 is_stmt 1 discriminator 3 view .LVU182
 180:Core/Src/oled.c **** 				{
 663              		.loc 1 180 18 is_stmt 0 discriminator 3 view .LVU183
 664 013c 0134     		adds	r4, r4, #1
 665              	.LVL64:
 180:Core/Src/oled.c **** 				{
 666              		.loc 1 180 18 discriminator 3 view .LVU184
 667 013e E4B2     		uxtb	r4, r4
 668              	.LVL65:
 669              	.L50:
 180:Core/Src/oled.c **** 				{
 670              		.loc 1 180 13 is_stmt 1 discriminator 1 view .LVU185
 180:Core/Src/oled.c **** 				{
 671              		.loc 1 180 5 is_stmt 0 discriminator 1 view .LVU186
 672 0140 072C     		cmp	r4, #7
 673 0142 E7D9     		bls	.L52
 674 0144 6AE7     		b	.L37
 675              	.LVL66:
 676              	.L53:
 196:Core/Src/oled.c **** 				OLED_2_data[y][x+i] = F6x8[c][i];
 677              		.loc 1 196 13 is_stmt 1 discriminator 1 view .LVU187
 196:Core/Src/oled.c **** 				OLED_2_data[y][x+i] = F6x8[c][i];
 678              		.loc 1 196 5 is_stmt 0 discriminator 1 view .LVU188
 679 0146 052C     		cmp	r4, #5
 680 0148 3FF668AF 		bhi	.L37
 197:Core/Src/oled.c **** 			}
 681              		.loc 1 197 5 is_stmt 1 discriminator 3 view .LVU189
 197:Core/Src/oled.c **** 			}
 682              		.loc 1 197 21 is_stmt 0 discriminator 3 view .LVU190
 683 014c 0E19     		adds	r6, r1, r4
 197:Core/Src/oled.c **** 			}
 684              		.loc 1 197 34 discriminator 3 view .LVU191
 685 014e 03EB4300 		add	r0, r3, r3, lsl #1
 686 0152 054D     		ldr	r5, .L65
 687 0154 05EB4000 		add	r0, r5, r0, lsl #1
 688 0158 055D     		ldrb	r5, [r0, r4]	@ zero_extendqisi2
 197:Core/Src/oled.c **** 			}
 689              		.loc 1 197 25 discriminator 3 view .LVU192
 690 015a 0648     		ldr	r0, .L65+12
ARM GAS  /tmp/ccAcRfab.s 			page 19


 691 015c 00EBC210 		add	r0, r0, r2, lsl #7
 692 0160 8555     		strb	r5, [r0, r6]
 196:Core/Src/oled.c **** 				OLED_2_data[y][x+i] = F6x8[c][i];
 693              		.loc 1 196 17 is_stmt 1 discriminator 3 view .LVU193
 196:Core/Src/oled.c **** 				OLED_2_data[y][x+i] = F6x8[c][i];
 694              		.loc 1 196 18 is_stmt 0 discriminator 3 view .LVU194
 695 0162 0134     		adds	r4, r4, #1
 696              	.LVL67:
 196:Core/Src/oled.c **** 				OLED_2_data[y][x+i] = F6x8[c][i];
 697              		.loc 1 196 18 discriminator 3 view .LVU195
 698 0164 E4B2     		uxtb	r4, r4
 699              	.LVL68:
 196:Core/Src/oled.c **** 				OLED_2_data[y][x+i] = F6x8[c][i];
 700              		.loc 1 196 18 discriminator 3 view .LVU196
 701 0166 EEE7     		b	.L53
 702              	.L66:
 703              		.align	2
 704              	.L65:
 705 0168 00000000 		.word	.LANCHOR5
 706 016c 00000000 		.word	.LANCHOR2
 707 0170 00000000 		.word	.LANCHOR4
 708 0174 00000000 		.word	.LANCHOR3
 709              		.cfi_endproc
 710              	.LFE136:
 712              		.section	.text.OLED_ShowNum,"ax",%progbits
 713              		.align	1
 714              		.global	OLED_ShowNum
 715              		.syntax unified
 716              		.thumb
 717              		.thumb_func
 718              		.fpu fpv4-sp-d16
 720              	OLED_ShowNum:
 721              	.LVL69:
 722              	.LFB135:
 107:Core/Src/oled.c **** 	uint8_t t,temp;
 723              		.loc 1 107 1 is_stmt 1 view -0
 724              		.cfi_startproc
 725              		@ args = 8, pretend = 0, frame = 0
 726              		@ frame_needed = 0, uses_anonymous_args = 0
 107:Core/Src/oled.c **** 	uint8_t t,temp;
 727              		.loc 1 107 1 is_stmt 0 view .LVU198
 728 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 729              	.LCFI9:
 730              		.cfi_def_cfa_offset 36
 731              		.cfi_offset 4, -36
 732              		.cfi_offset 5, -32
 733              		.cfi_offset 6, -28
 734              		.cfi_offset 7, -24
 735              		.cfi_offset 8, -20
 736              		.cfi_offset 9, -16
 737              		.cfi_offset 10, -12
 738              		.cfi_offset 11, -8
 739              		.cfi_offset 14, -4
 740 0004 83B0     		sub	sp, sp, #12
 741              	.LCFI10:
 742              		.cfi_def_cfa_offset 48
 743 0006 8346     		mov	fp, r0
ARM GAS  /tmp/ccAcRfab.s 			page 20


 744 0008 8A46     		mov	r10, r1
 745 000a 9146     		mov	r9, r2
 746 000c 9846     		mov	r8, r3
 747 000e 9DF83050 		ldrb	r5, [sp, #48]	@ zero_extendqisi2
 748 0012 9DF83460 		ldrb	r6, [sp, #52]	@ zero_extendqisi2
 108:Core/Src/oled.c **** 	uint8_t enshow=0;						   
 749              		.loc 1 108 2 is_stmt 1 view .LVU199
 109:Core/Src/oled.c **** 	for(t=0;t<len;t++)
 750              		.loc 1 109 2 view .LVU200
 751              	.LVL70:
 110:Core/Src/oled.c **** 	{
 752              		.loc 1 110 2 view .LVU201
 109:Core/Src/oled.c **** 	for(t=0;t<len;t++)
 753              		.loc 1 109 10 is_stmt 0 view .LVU202
 754 0016 0027     		movs	r7, #0
 110:Core/Src/oled.c **** 	{
 755              		.loc 1 110 7 view .LVU203
 756 0018 3C46     		mov	r4, r7
 110:Core/Src/oled.c **** 	{
 757              		.loc 1 110 2 view .LVU204
 758 001a 1EE0     		b	.L68
 759              	.LVL71:
 760              	.L75:
 117:Core/Src/oled.c **** 				continue;
 761              		.loc 1 117 5 is_stmt 1 view .LVU205
 117:Core/Src/oled.c **** 				continue;
 762              		.loc 1 117 38 is_stmt 0 view .LVU206
 763 001c 7108     		lsrs	r1, r6, #1
 764 001e 11FB04F1 		smulbb	r1, r1, r4
 117:Core/Src/oled.c **** 				continue;
 765              		.loc 1 117 5 view .LVU207
 766 0022 5AFA81F1 		uxtab	r1, r10, r1
 767 0026 0193     		str	r3, [sp, #4]
 768 0028 0096     		str	r6, [sp]
 769 002a 2023     		movs	r3, #32
 770              	.LVL72:
 117:Core/Src/oled.c **** 				continue;
 771              		.loc 1 117 5 view .LVU208
 772 002c 4A46     		mov	r2, r9
 773 002e C9B2     		uxtb	r1, r1
 774 0030 5846     		mov	r0, fp
 775 0032 FFF7FEFF 		bl	OLED_ShowChar
 776              	.LVL73:
 118:Core/Src/oled.c **** 			}else enshow=1; 
 777              		.loc 1 118 5 is_stmt 1 view .LVU209
 778 0036 0EE0     		b	.L70
 779              	.LVL74:
 780              	.L69:
 122:Core/Src/oled.c **** 	}
 781              		.loc 1 122 4 view .LVU210
 122:Core/Src/oled.c **** 	}
 782              		.loc 1 122 37 is_stmt 0 view .LVU211
 783 0038 7108     		lsrs	r1, r6, #1
 784 003a 11FB04F1 		smulbb	r1, r1, r4
 122:Core/Src/oled.c **** 	}
 785              		.loc 1 122 4 view .LVU212
 786 003e 3033     		adds	r3, r3, #48
ARM GAS  /tmp/ccAcRfab.s 			page 21


 787              	.LVL75:
 122:Core/Src/oled.c **** 	}
 788              		.loc 1 122 4 view .LVU213
 789 0040 5AFA81F1 		uxtab	r1, r10, r1
 790 0044 0022     		movs	r2, #0
 791 0046 0192     		str	r2, [sp, #4]
 792 0048 0096     		str	r6, [sp]
 793 004a DBB2     		uxtb	r3, r3
 794              	.LVL76:
 122:Core/Src/oled.c **** 	}
 795              		.loc 1 122 4 view .LVU214
 796 004c 4A46     		mov	r2, r9
 797 004e C9B2     		uxtb	r1, r1
 798 0050 5846     		mov	r0, fp
 799              	.LVL77:
 122:Core/Src/oled.c **** 	}
 800              		.loc 1 122 4 view .LVU215
 801 0052 FFF7FEFF 		bl	OLED_ShowChar
 802              	.LVL78:
 803              	.L70:
 110:Core/Src/oled.c **** 	{
 804              		.loc 1 110 16 is_stmt 1 discriminator 2 view .LVU216
 110:Core/Src/oled.c **** 	{
 805              		.loc 1 110 17 is_stmt 0 discriminator 2 view .LVU217
 806 0056 0134     		adds	r4, r4, #1
 807              	.LVL79:
 110:Core/Src/oled.c **** 	{
 808              		.loc 1 110 17 discriminator 2 view .LVU218
 809 0058 E4B2     		uxtb	r4, r4
 810              	.LVL80:
 811              	.L68:
 110:Core/Src/oled.c **** 	{
 812              		.loc 1 110 10 is_stmt 1 discriminator 1 view .LVU219
 110:Core/Src/oled.c **** 	{
 813              		.loc 1 110 2 is_stmt 0 discriminator 1 view .LVU220
 814 005a AC42     		cmp	r4, r5
 815 005c 1AD2     		bcs	.L74
 112:Core/Src/oled.c **** 		if(enshow==0&&t<(len-1))
 816              		.loc 1 112 3 is_stmt 1 view .LVU221
 112:Core/Src/oled.c **** 		if(enshow==0&&t<(len-1))
 817              		.loc 1 112 28 is_stmt 0 view .LVU222
 818 005e 291B     		subs	r1, r5, r4
 819 0060 C9B2     		uxtb	r1, r1
 112:Core/Src/oled.c **** 		if(enshow==0&&t<(len-1))
 820              		.loc 1 112 13 view .LVU223
 821 0062 0139     		subs	r1, r1, #1
 822 0064 C9B2     		uxtb	r1, r1
 823 0066 0A20     		movs	r0, #10
 824 0068 FFF7FEFF 		bl	oled_pow
 825              	.LVL81:
 112:Core/Src/oled.c **** 		if(enshow==0&&t<(len-1))
 826              		.loc 1 112 12 view .LVU224
 827 006c B8FBF0F0 		udiv	r0, r8, r0
 112:Core/Src/oled.c **** 		if(enshow==0&&t<(len-1))
 828              		.loc 1 112 34 view .LVU225
 829 0070 0A4B     		ldr	r3, .L76
 830 0072 A3FB0023 		umull	r2, r3, r3, r0
ARM GAS  /tmp/ccAcRfab.s 			page 22


 831 0076 DB08     		lsrs	r3, r3, #3
 832 0078 03EB8303 		add	r3, r3, r3, lsl #2
 833 007c A0EB4303 		sub	r3, r0, r3, lsl #1
 112:Core/Src/oled.c **** 		if(enshow==0&&t<(len-1))
 834              		.loc 1 112 7 view .LVU226
 835 0080 DBB2     		uxtb	r3, r3
 836              	.LVL82:
 113:Core/Src/oled.c **** 		{
 837              		.loc 1 113 3 is_stmt 1 view .LVU227
 113:Core/Src/oled.c **** 		{
 838              		.loc 1 113 5 is_stmt 0 view .LVU228
 839 0082 002F     		cmp	r7, #0
 840 0084 D8D1     		bne	.L69
 113:Core/Src/oled.c **** 		{
 841              		.loc 1 113 23 discriminator 1 view .LVU229
 842 0086 6A1E     		subs	r2, r5, #1
 113:Core/Src/oled.c **** 		{
 843              		.loc 1 113 15 discriminator 1 view .LVU230
 844 0088 9442     		cmp	r4, r2
 845 008a D5DA     		bge	.L69
 115:Core/Src/oled.c **** 			{
 846              		.loc 1 115 4 is_stmt 1 view .LVU231
 115:Core/Src/oled.c **** 			{
 847              		.loc 1 115 6 is_stmt 0 view .LVU232
 848 008c 002B     		cmp	r3, #0
 849 008e C5D0     		beq	.L75
 119:Core/Src/oled.c **** 		 	 
 850              		.loc 1 119 16 view .LVU233
 851 0090 0127     		movs	r7, #1
 852              	.LVL83:
 119:Core/Src/oled.c **** 		 	 
 853              		.loc 1 119 16 view .LVU234
 854 0092 D1E7     		b	.L69
 855              	.LVL84:
 856              	.L74:
 124:Core/Src/oled.c **** //在指定位置显示一个字符,包括部分字符
 857              		.loc 1 124 1 view .LVU235
 858 0094 03B0     		add	sp, sp, #12
 859              	.LCFI11:
 860              		.cfi_def_cfa_offset 36
 861              		@ sp needed
 862 0096 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 863              	.LVL85:
 864              	.L77:
 124:Core/Src/oled.c **** //在指定位置显示一个字符,包括部分字符
 865              		.loc 1 124 1 view .LVU236
 866 009a 00BF     		.align	2
 867              	.L76:
 868 009c CDCCCCCC 		.word	-858993459
 869              		.cfi_endproc
 870              	.LFE135:
 872              		.section	.text.OLED_ShowString,"ax",%progbits
 873              		.align	1
 874              		.global	OLED_ShowString
 875              		.syntax unified
 876              		.thumb
 877              		.thumb_func
ARM GAS  /tmp/ccAcRfab.s 			page 23


 878              		.fpu fpv4-sp-d16
 880              	OLED_ShowString:
 881              	.LVL86:
 882              	.LFB137:
 207:Core/Src/oled.c ****  
 208:Core/Src/oled.c **** //显示一个字符号串
 209:Core/Src/oled.c **** void OLED_ShowString(uint8_t ADDRESS,uint8_t x,uint8_t y,char chr[],uint8_t Char_Size)
 210:Core/Src/oled.c **** {
 883              		.loc 1 210 1 is_stmt 1 view -0
 884              		.cfi_startproc
 885              		@ args = 4, pretend = 0, frame = 0
 886              		@ frame_needed = 0, uses_anonymous_args = 0
 887              		.loc 1 210 1 is_stmt 0 view .LVU238
 888 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 889              	.LCFI12:
 890              		.cfi_def_cfa_offset 28
 891              		.cfi_offset 4, -28
 892              		.cfi_offset 5, -24
 893              		.cfi_offset 6, -20
 894              		.cfi_offset 7, -16
 895              		.cfi_offset 8, -12
 896              		.cfi_offset 9, -8
 897              		.cfi_offset 14, -4
 898 0004 83B0     		sub	sp, sp, #12
 899              	.LCFI13:
 900              		.cfi_def_cfa_offset 40
 901 0006 0746     		mov	r7, r0
 902 0008 0C46     		mov	r4, r1
 903 000a 1546     		mov	r5, r2
 904 000c 1E46     		mov	r6, r3
 905 000e 9DF82880 		ldrb	r8, [sp, #40]	@ zero_extendqisi2
 211:Core/Src/oled.c **** 	unsigned char j=0;
 906              		.loc 1 211 2 is_stmt 1 view .LVU239
 907              	.LVL87:
 212:Core/Src/oled.c **** 	while (chr[j]!='\0')
 908              		.loc 1 212 2 view .LVU240
 211:Core/Src/oled.c **** 	unsigned char j=0;
 909              		.loc 1 211 16 is_stmt 0 view .LVU241
 910 0012 4FF00009 		mov	r9, #0
 911              		.loc 1 212 8 view .LVU242
 912 0016 03E0     		b	.L79
 913              	.LVL88:
 914              	.L80:
 213:Core/Src/oled.c **** 	{		OLED_ShowChar(ADDRESS,x,y,chr[j],Char_Size,0);
 214:Core/Src/oled.c **** 			x+=8;
 215:Core/Src/oled.c **** 		if(x>120){x=0;y+=2;}
 216:Core/Src/oled.c **** 			j++;
 915              		.loc 1 216 4 is_stmt 1 view .LVU243
 916              		.loc 1 216 5 is_stmt 0 view .LVU244
 917 0018 09F10101 		add	r1, r9, #1
 918 001c 5FFA81F9 		uxtb	r9, r1
 919              	.LVL89:
 920              	.L79:
 212:Core/Src/oled.c **** 	while (chr[j]!='\0')
 921              		.loc 1 212 8 is_stmt 1 view .LVU245
 212:Core/Src/oled.c **** 	while (chr[j]!='\0')
 922              		.loc 1 212 12 is_stmt 0 view .LVU246
ARM GAS  /tmp/ccAcRfab.s 			page 24


 923 0020 16F80930 		ldrb	r3, [r6, r9]	@ zero_extendqisi2
 212:Core/Src/oled.c **** 	while (chr[j]!='\0')
 924              		.loc 1 212 8 view .LVU247
 925 0024 83B1     		cbz	r3, .L83
 213:Core/Src/oled.c **** 	{		OLED_ShowChar(ADDRESS,x,y,chr[j],Char_Size,0);
 926              		.loc 1 213 5 is_stmt 1 view .LVU248
 927 0026 0022     		movs	r2, #0
 928 0028 0192     		str	r2, [sp, #4]
 929 002a CDF80080 		str	r8, [sp]
 930 002e 2A46     		mov	r2, r5
 931 0030 2146     		mov	r1, r4
 932 0032 3846     		mov	r0, r7
 933 0034 FFF7FEFF 		bl	OLED_ShowChar
 934              	.LVL90:
 214:Core/Src/oled.c **** 		if(x>120){x=0;y+=2;}
 935              		.loc 1 214 4 view .LVU249
 214:Core/Src/oled.c **** 		if(x>120){x=0;y+=2;}
 936              		.loc 1 214 5 is_stmt 0 view .LVU250
 937 0038 0834     		adds	r4, r4, #8
 938              	.LVL91:
 214:Core/Src/oled.c **** 		if(x>120){x=0;y+=2;}
 939              		.loc 1 214 5 view .LVU251
 940 003a E4B2     		uxtb	r4, r4
 941              	.LVL92:
 215:Core/Src/oled.c **** 			j++;
 942              		.loc 1 215 3 is_stmt 1 view .LVU252
 215:Core/Src/oled.c **** 			j++;
 943              		.loc 1 215 5 is_stmt 0 view .LVU253
 944 003c 782C     		cmp	r4, #120
 945 003e EBD9     		bls	.L80
 215:Core/Src/oled.c **** 			j++;
 946              		.loc 1 215 13 is_stmt 1 discriminator 1 view .LVU254
 947              	.LVL93:
 215:Core/Src/oled.c **** 			j++;
 948              		.loc 1 215 17 discriminator 1 view .LVU255
 215:Core/Src/oled.c **** 			j++;
 949              		.loc 1 215 18 is_stmt 0 discriminator 1 view .LVU256
 950 0040 0235     		adds	r5, r5, #2
 951              	.LVL94:
 215:Core/Src/oled.c **** 			j++;
 952              		.loc 1 215 18 discriminator 1 view .LVU257
 953 0042 EDB2     		uxtb	r5, r5
 954              	.LVL95:
 215:Core/Src/oled.c **** 			j++;
 955              		.loc 1 215 14 discriminator 1 view .LVU258
 956 0044 0024     		movs	r4, #0
 957 0046 E7E7     		b	.L80
 958              	.LVL96:
 959              	.L83:
 217:Core/Src/oled.c **** 	}
 218:Core/Src/oled.c **** }
 960              		.loc 1 218 1 view .LVU259
 961 0048 03B0     		add	sp, sp, #12
 962              	.LCFI14:
 963              		.cfi_def_cfa_offset 28
 964              		@ sp needed
 965 004a BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
ARM GAS  /tmp/ccAcRfab.s 			page 25


 966              		.loc 1 218 1 view .LVU260
 967              		.cfi_endproc
 968              	.LFE137:
 970              		.section	.text.OLED_ShowCHinese,"ax",%progbits
 971              		.align	1
 972              		.global	OLED_ShowCHinese
 973              		.syntax unified
 974              		.thumb
 975              		.thumb_func
 976              		.fpu fpv4-sp-d16
 978              	OLED_ShowCHinese:
 979              	.LVL97:
 980              	.LFB138:
 219:Core/Src/oled.c **** //显示汉字
 220:Core/Src/oled.c **** //hzk 用取模软件得出的数组
 221:Core/Src/oled.c **** void OLED_ShowCHinese(uint8_t ADDRESS,uint8_t x,uint8_t y,uint8_t no)
 222:Core/Src/oled.c **** {
 981              		.loc 1 222 1 is_stmt 1 view -0
 982              		.cfi_startproc
 983              		@ args = 0, pretend = 0, frame = 0
 984              		@ frame_needed = 0, uses_anonymous_args = 0
 985              		@ link register save eliminated.
 986              		.loc 1 222 1 is_stmt 0 view .LVU262
 987 0000 F0B4     		push	{r4, r5, r6, r7}
 988              	.LCFI15:
 989              		.cfi_def_cfa_offset 16
 990              		.cfi_offset 4, -16
 991              		.cfi_offset 5, -12
 992              		.cfi_offset 6, -8
 993              		.cfi_offset 7, -4
 223:Core/Src/oled.c **** 	uint8_t t;
 994              		.loc 1 223 2 is_stmt 1 view .LVU263
 224:Core/Src/oled.c **** 	
 225:Core/Src/oled.c **** 	if(ADDRESS == OLED_1)
 995              		.loc 1 225 2 view .LVU264
 996              		.loc 1 225 4 is_stmt 0 view .LVU265
 997 0002 7828     		cmp	r0, #120
 998 0004 03D0     		beq	.L99
 226:Core/Src/oled.c **** 	{
 227:Core/Src/oled.c ****     for(t=0;t<16;t++)
 228:Core/Src/oled.c **** 		{
 229:Core/Src/oled.c **** 			OLED_1_data[y][x+t]=Hzk[2*no][t];
 230:Core/Src/oled.c ****     }
 231:Core/Src/oled.c ****     for(t=0;t<16;t++)
 232:Core/Src/oled.c **** 		{
 233:Core/Src/oled.c **** 			OLED_1_data[y+1][x+t]=Hzk[2*no+1][t];
 234:Core/Src/oled.c ****     }
 235:Core/Src/oled.c **** 	}
 236:Core/Src/oled.c **** 	else if(ADDRESS == OLED_2)
 999              		.loc 1 236 7 is_stmt 1 view .LVU266
 1000              		.loc 1 236 9 is_stmt 0 view .LVU267
 1001 0006 7A28     		cmp	r0, #122
 1002 0008 22D0     		beq	.L100
 1003              	.LVL98:
 1004              	.L84:
 237:Core/Src/oled.c **** 	{
 238:Core/Src/oled.c ****     for(t=0;t<16;t++)
ARM GAS  /tmp/ccAcRfab.s 			page 26


 239:Core/Src/oled.c **** 		{
 240:Core/Src/oled.c **** 			OLED_2_data[y][x+t]=Hzk[2*no][t];
 241:Core/Src/oled.c ****     }
 242:Core/Src/oled.c ****     for(t=0;t<16;t++)
 243:Core/Src/oled.c **** 		{
 244:Core/Src/oled.c **** 			OLED_2_data[y+1][x+t]=Hzk[2*no+1][t];
 245:Core/Src/oled.c ****     }
 246:Core/Src/oled.c **** 	}
 247:Core/Src/oled.c **** }
 1005              		.loc 1 247 1 view .LVU268
 1006 000a F0BC     		pop	{r4, r5, r6, r7}
 1007              	.LCFI16:
 1008              		.cfi_remember_state
 1009              		.cfi_restore 7
 1010              		.cfi_restore 6
 1011              		.cfi_restore 5
 1012              		.cfi_restore 4
 1013              		.cfi_def_cfa_offset 0
 1014 000c 7047     		bx	lr
 1015              	.LVL99:
 1016              	.L99:
 1017              	.LCFI17:
 1018              		.cfi_restore_state
 227:Core/Src/oled.c **** 		{
 1019              		.loc 1 227 10 view .LVU269
 1020 000e 0020     		movs	r0, #0
 1021              	.LVL100:
 1022              	.L85:
 227:Core/Src/oled.c **** 		{
 1023              		.loc 1 227 13 is_stmt 1 discriminator 1 view .LVU270
 227:Core/Src/oled.c **** 		{
 1024              		.loc 1 227 5 is_stmt 0 discriminator 1 view .LVU271
 1025 0010 0F28     		cmp	r0, #15
 1026 0012 0BD8     		bhi	.L101
 229:Core/Src/oled.c ****     }
 1027              		.loc 1 229 4 is_stmt 1 discriminator 3 view .LVU272
 229:Core/Src/oled.c ****     }
 1028              		.loc 1 229 20 is_stmt 0 discriminator 3 view .LVU273
 1029 0014 0D18     		adds	r5, r1, r0
 229:Core/Src/oled.c ****     }
 1030              		.loc 1 229 33 discriminator 3 view .LVU274
 1031 0016 1F4C     		ldr	r4, .L103
 1032 0018 04EB8314 		add	r4, r4, r3, lsl #6
 1033 001c 265C     		ldrb	r6, [r4, r0]	@ zero_extendqisi2
 229:Core/Src/oled.c ****     }
 1034              		.loc 1 229 23 discriminator 3 view .LVU275
 1035 001e 1E4C     		ldr	r4, .L103+4
 1036 0020 04EBC214 		add	r4, r4, r2, lsl #7
 1037 0024 6655     		strb	r6, [r4, r5]
 227:Core/Src/oled.c **** 		{
 1038              		.loc 1 227 18 is_stmt 1 discriminator 3 view .LVU276
 227:Core/Src/oled.c **** 		{
 1039              		.loc 1 227 19 is_stmt 0 discriminator 3 view .LVU277
 1040 0026 0130     		adds	r0, r0, #1
 1041              	.LVL101:
 227:Core/Src/oled.c **** 		{
 1042              		.loc 1 227 19 discriminator 3 view .LVU278
ARM GAS  /tmp/ccAcRfab.s 			page 27


 1043 0028 C0B2     		uxtb	r0, r0
 1044              	.LVL102:
 227:Core/Src/oled.c **** 		{
 1045              		.loc 1 227 19 discriminator 3 view .LVU279
 1046 002a F1E7     		b	.L85
 1047              	.L101:
 231:Core/Src/oled.c **** 		{
 1048              		.loc 1 231 10 view .LVU280
 1049 002c 0020     		movs	r0, #0
 1050              	.LVL103:
 1051              	.L88:
 231:Core/Src/oled.c **** 		{
 1052              		.loc 1 231 13 is_stmt 1 discriminator 1 view .LVU281
 231:Core/Src/oled.c **** 		{
 1053              		.loc 1 231 5 is_stmt 0 discriminator 1 view .LVU282
 1054 002e 0F28     		cmp	r0, #15
 1055 0030 EBD8     		bhi	.L84
 233:Core/Src/oled.c ****     }
 1056              		.loc 1 233 4 is_stmt 1 discriminator 3 view .LVU283
 233:Core/Src/oled.c ****     }
 1057              		.loc 1 233 31 is_stmt 0 discriminator 3 view .LVU284
 1058 0032 5D00     		lsls	r5, r3, #1
 233:Core/Src/oled.c ****     }
 1059              		.loc 1 233 34 discriminator 3 view .LVU285
 1060 0034 6E1C     		adds	r6, r5, #1
 233:Core/Src/oled.c ****     }
 1061              		.loc 1 233 17 discriminator 3 view .LVU286
 1062 0036 541C     		adds	r4, r2, #1
 233:Core/Src/oled.c ****     }
 1063              		.loc 1 233 22 discriminator 3 view .LVU287
 1064 0038 0F18     		adds	r7, r1, r0
 233:Core/Src/oled.c ****     }
 1065              		.loc 1 233 37 discriminator 3 view .LVU288
 1066 003a 164D     		ldr	r5, .L103
 1067 003c 05EB4615 		add	r5, r5, r6, lsl #5
 1068 0040 2E5C     		ldrb	r6, [r5, r0]	@ zero_extendqisi2
 233:Core/Src/oled.c ****     }
 1069              		.loc 1 233 25 discriminator 3 view .LVU289
 1070 0042 154D     		ldr	r5, .L103+4
 1071 0044 05EBC414 		add	r4, r5, r4, lsl #7
 1072 0048 E655     		strb	r6, [r4, r7]
 231:Core/Src/oled.c **** 		{
 1073              		.loc 1 231 18 is_stmt 1 discriminator 3 view .LVU290
 231:Core/Src/oled.c **** 		{
 1074              		.loc 1 231 19 is_stmt 0 discriminator 3 view .LVU291
 1075 004a 0130     		adds	r0, r0, #1
 1076              	.LVL104:
 231:Core/Src/oled.c **** 		{
 1077              		.loc 1 231 19 discriminator 3 view .LVU292
 1078 004c C0B2     		uxtb	r0, r0
 1079              	.LVL105:
 231:Core/Src/oled.c **** 		{
 1080              		.loc 1 231 19 discriminator 3 view .LVU293
 1081 004e EEE7     		b	.L88
 1082              	.LVL106:
 1083              	.L100:
 238:Core/Src/oled.c **** 		{
ARM GAS  /tmp/ccAcRfab.s 			page 28


 1084              		.loc 1 238 10 view .LVU294
 1085 0050 0020     		movs	r0, #0
 1086              	.LVL107:
 1087              	.L91:
 238:Core/Src/oled.c **** 		{
 1088              		.loc 1 238 13 is_stmt 1 discriminator 1 view .LVU295
 238:Core/Src/oled.c **** 		{
 1089              		.loc 1 238 5 is_stmt 0 discriminator 1 view .LVU296
 1090 0052 0F28     		cmp	r0, #15
 1091 0054 0BD8     		bhi	.L102
 240:Core/Src/oled.c ****     }
 1092              		.loc 1 240 4 is_stmt 1 discriminator 3 view .LVU297
 240:Core/Src/oled.c ****     }
 1093              		.loc 1 240 20 is_stmt 0 discriminator 3 view .LVU298
 1094 0056 0D18     		adds	r5, r1, r0
 240:Core/Src/oled.c ****     }
 1095              		.loc 1 240 33 discriminator 3 view .LVU299
 1096 0058 0E4C     		ldr	r4, .L103
 1097 005a 04EB8314 		add	r4, r4, r3, lsl #6
 1098 005e 265C     		ldrb	r6, [r4, r0]	@ zero_extendqisi2
 240:Core/Src/oled.c ****     }
 1099              		.loc 1 240 23 discriminator 3 view .LVU300
 1100 0060 0E4C     		ldr	r4, .L103+8
 1101 0062 04EBC214 		add	r4, r4, r2, lsl #7
 1102 0066 6655     		strb	r6, [r4, r5]
 238:Core/Src/oled.c **** 		{
 1103              		.loc 1 238 18 is_stmt 1 discriminator 3 view .LVU301
 238:Core/Src/oled.c **** 		{
 1104              		.loc 1 238 19 is_stmt 0 discriminator 3 view .LVU302
 1105 0068 0130     		adds	r0, r0, #1
 1106              	.LVL108:
 238:Core/Src/oled.c **** 		{
 1107              		.loc 1 238 19 discriminator 3 view .LVU303
 1108 006a C0B2     		uxtb	r0, r0
 1109              	.LVL109:
 238:Core/Src/oled.c **** 		{
 1110              		.loc 1 238 19 discriminator 3 view .LVU304
 1111 006c F1E7     		b	.L91
 1112              	.L102:
 242:Core/Src/oled.c **** 		{
 1113              		.loc 1 242 10 view .LVU305
 1114 006e 0020     		movs	r0, #0
 1115              	.LVL110:
 1116              	.L93:
 242:Core/Src/oled.c **** 		{
 1117              		.loc 1 242 13 is_stmt 1 discriminator 1 view .LVU306
 242:Core/Src/oled.c **** 		{
 1118              		.loc 1 242 5 is_stmt 0 discriminator 1 view .LVU307
 1119 0070 0F28     		cmp	r0, #15
 1120 0072 CAD8     		bhi	.L84
 244:Core/Src/oled.c ****     }
 1121              		.loc 1 244 4 is_stmt 1 discriminator 3 view .LVU308
 244:Core/Src/oled.c ****     }
 1122              		.loc 1 244 31 is_stmt 0 discriminator 3 view .LVU309
 1123 0074 5D00     		lsls	r5, r3, #1
 244:Core/Src/oled.c ****     }
 1124              		.loc 1 244 34 discriminator 3 view .LVU310
ARM GAS  /tmp/ccAcRfab.s 			page 29


 1125 0076 6E1C     		adds	r6, r5, #1
 244:Core/Src/oled.c ****     }
 1126              		.loc 1 244 17 discriminator 3 view .LVU311
 1127 0078 541C     		adds	r4, r2, #1
 244:Core/Src/oled.c ****     }
 1128              		.loc 1 244 22 discriminator 3 view .LVU312
 1129 007a 0F18     		adds	r7, r1, r0
 244:Core/Src/oled.c ****     }
 1130              		.loc 1 244 37 discriminator 3 view .LVU313
 1131 007c 054D     		ldr	r5, .L103
 1132 007e 05EB4615 		add	r5, r5, r6, lsl #5
 1133 0082 2E5C     		ldrb	r6, [r5, r0]	@ zero_extendqisi2
 244:Core/Src/oled.c ****     }
 1134              		.loc 1 244 25 discriminator 3 view .LVU314
 1135 0084 054D     		ldr	r5, .L103+8
 1136 0086 05EBC414 		add	r4, r5, r4, lsl #7
 1137 008a E655     		strb	r6, [r4, r7]
 242:Core/Src/oled.c **** 		{
 1138              		.loc 1 242 18 is_stmt 1 discriminator 3 view .LVU315
 242:Core/Src/oled.c **** 		{
 1139              		.loc 1 242 19 is_stmt 0 discriminator 3 view .LVU316
 1140 008c 0130     		adds	r0, r0, #1
 1141              	.LVL111:
 242:Core/Src/oled.c **** 		{
 1142              		.loc 1 242 19 discriminator 3 view .LVU317
 1143 008e C0B2     		uxtb	r0, r0
 1144              	.LVL112:
 242:Core/Src/oled.c **** 		{
 1145              		.loc 1 242 19 discriminator 3 view .LVU318
 1146 0090 EEE7     		b	.L93
 1147              	.L104:
 1148 0092 00BF     		.align	2
 1149              	.L103:
 1150 0094 00000000 		.word	.LANCHOR6
 1151 0098 00000000 		.word	.LANCHOR2
 1152 009c 00000000 		.word	.LANCHOR3
 1153              		.cfi_endproc
 1154              	.LFE138:
 1156              		.global	CMD_Data
 1157              		.global	OLED_2_data
 1158              		.global	OLED_1_data
 1159              		.global	Hzk
 1160              		.global	F8X16
 1161              		.global	F6x8
 1162              		.section	.bss.OLED_1_data,"aw",%nobits
 1163              		.align	2
 1164              		.set	.LANCHOR2,. + 0
 1167              	OLED_1_data:
 1168 0000 00000000 		.space	1024
 1168      00000000 
 1168      00000000 
 1168      00000000 
 1168      00000000 
 1169              		.section	.bss.OLED_2_data,"aw",%nobits
 1170              		.align	2
 1171              		.set	.LANCHOR3,. + 0
 1174              	OLED_2_data:
ARM GAS  /tmp/ccAcRfab.s 			page 30


 1175 0000 00000000 		.space	1024
 1175      00000000 
 1175      00000000 
 1175      00000000 
 1175      00000000 
 1176              		.section	.bss.oled_refresh.8935,"aw",%nobits
 1177              		.set	.LANCHOR1,. + 0
 1180              	oled_refresh.8935:
 1181 0000 00       		.space	1
 1182              		.section	.data.CMD_Data,"aw"
 1183              		.align	2
 1184              		.set	.LANCHOR0,. + 0
 1187              	CMD_Data:
 1188 0000 AE001040 		.ascii	"\256\000\020@\260\201\377\241\246\250?\310\323\000\325"
 1188      B081FFA1 
 1188      A6A83FC8 
 1188      D300D5
 1189 000f 80D805D9 		.ascii	"\200\330\005\331\361\332\022\3330\215\024\257 \000"
 1189      F1DA12DB 
 1189      308D14AF 
 1189      2000
 1190              		.section	.data.Hzk,"aw"
 1191              		.align	2
 1192              		.set	.LANCHOR6,. + 0
 1195              	Hzk:
 1196 0000 002018C7 		.ascii	"\000 \030\307DDDD\374DDDD\004\000\000\000"
 1196      44444444 
 1196      FC444444 
 1196      44040000 
 1196      00
 1197 0011 00000000 		.space	15
 1197      00000000 
 1197      00000000 
 1197      000000
 1198 0020 04040407 		.ascii	"\004\004\004\007\004\004\004\004\377\004\004\004\004"
 1198      04040404 
 1198      FF040404 
 1198      04
 1199 002d 04040000 		.ascii	"\004\004\000\000"
 1200 0031 00000000 		.space	15
 1200      00000000 
 1200      00000000 
 1200      000000
 1201 0040 000000FE 		.ascii	"\000\000\000\376\"\"\"\"\"\"\"\"\376\000\000\000\000"
 1201      22222222 
 1201      22222222 
 1201      FE000000 
 1201      00
 1202 0051 00000000 		.space	15
 1202      00000000 
 1202      00000000 
 1202      000000
 1203 0060 8040300F 		.ascii	"\200@0\017\002\002\002\002\002\002B\202\177\000\000"
 1203      02020202 
 1203      02024282 
 1203      7F0000
 1204 006f 0000     		.ascii	"\000\000"
ARM GAS  /tmp/ccAcRfab.s 			page 31


 1205 0071 00000000 		.space	15
 1205      00000000 
 1205      00000000 
 1205      000000
 1206 0080 000000FE 		.ascii	"\000\000\000\376\202\202\202\202\202\202\202\376\000"
 1206      82828282 
 1206      828282FE 
 1206      00
 1207 008d 00000000 		.ascii	"\000\000\000\000"
 1208 0091 00000000 		.space	15
 1208      00000000 
 1208      00000000 
 1208      000000
 1209 00a0 000000FF 		.ascii	"\000\000\000\377@@@@@@@\377\000\000\000\000\000"
 1209      40404040 
 1209      404040FF 
 1209      00000000 
 1209      00
 1210 00b1 00000000 		.space	15
 1210      00000000 
 1210      00000000 
 1210      000000
 1211 00c0 00FC8484 		.ascii	"\000\374\204\204\204\374\000\020\020\020\020\020\377"
 1211      84FC0010 
 1211      10101010 
 1211      FF
 1212 00cd 10100000 		.ascii	"\020\020\000\000"
 1213 00d1 00000000 		.space	15
 1213      00000000 
 1213      00000000 
 1213      000000
 1214 00e0 003F1010 		.ascii	"\000?\020\020\020?\000\000\001\006@\200\177\000\000"
 1214      103F0000 
 1214      01064080 
 1214      7F0000
 1215 00ef 0000     		.ascii	"\000\000"
 1216 00f1 00000000 		.space	15
 1216      00000000 
 1216      00000000 
 1216      000000
 1217 0100 80402090 		.ascii	"\200@ \220\210\206\200\200\200\203\214\020 @\200\000"
 1217      88868080 
 1217      80838C10 
 1217      20408000 
 1218 0110 00       		.ascii	"\000"
 1219 0111 00000000 		.space	15
 1219      00000000 
 1219      00000000 
 1219      000000
 1220 0120 00804020 		.ascii	"\000\200@ \030\007\000@\200@?\000\000\000\000\000\000"
 1220      18070040 
 1220      80403F00 
 1220      00000000 
 1220      00
 1221 0131 00000000 		.space	15
 1221      00000000 
 1221      00000000 
ARM GAS  /tmp/ccAcRfab.s 			page 32


 1221      000000
 1222 0140 2424A4FE 		.ascii	"$$\244\376#\"\000\3008\000\377\000\010\020`\000\000"
 1222      232200C0 
 1222      3800FF00 
 1222      08106000 
 1222      00
 1223 0151 00000000 		.space	15
 1223      00000000 
 1223      00000000 
 1223      000000
 1224 0160 080601FF 		.ascii	"\010\006\001\377\001\006\201\200@@'\020\014\003\000"
 1224      01068180 
 1224      40402710 
 1224      0C0300
 1225 016f 0000     		.ascii	"\000\000"
 1226 0171 00000000 		.space	15
 1226      00000000 
 1226      00000000 
 1226      000000
 1227              		.section	.rodata.F6x8,"a"
 1228              		.align	2
 1229              		.set	.LANCHOR5,. + 0
 1232              	F6x8:
 1233 0000 00000000 		.ascii	"\000\000\000\000\000\000"
 1233      0000
 1234 0006 0000002F 		.ascii	"\000\000\000/\000\000"
 1234      0000
 1235 000c 00000700 		.ascii	"\000\000\007\000\007\000"
 1235      0700
 1236 0012 00147F14 		.ascii	"\000\024\177\024\177\024"
 1236      7F14
 1237 0018 00242A7F 		.ascii	"\000$*\177*\022"
 1237      2A12
 1238 001e 00626408 		.ascii	"\000bd\010\023#"
 1238      1323
 1239 0024 00364955 		.ascii	"\0006IU\"P"
 1239      2250
 1240 002a 00000503 		.ascii	"\000\000\005\003\000\000"
 1240      0000
 1241 0030 00001C22 		.ascii	"\000\000\034\"A\000"
 1241      4100
 1242 0036 00004122 		.ascii	"\000\000A\"\034\000"
 1242      1C00
 1243 003c 0014083E 		.ascii	"\000\024\010>\010\024"
 1243      0814
 1244 0042 0008083E 		.ascii	"\000\010\010>\010\010"
 1244      0808
 1245 0048 000000A0 		.ascii	"\000\000\000\240`\000"
 1245      6000
 1246 004e 00080808 		.ascii	"\000\010\010\010\010\010"
 1246      0808
 1247 0054 00006060 		.ascii	"\000\000``\000\000"
 1247      0000
 1248 005a 00201008 		.ascii	"\000 \020\010\004\002"
 1248      0402
 1249 0060 003E5149 		.ascii	"\000>QIE>"
 1249      453E
ARM GAS  /tmp/ccAcRfab.s 			page 33


 1250 0066 0000427F 		.ascii	"\000\000B\177@\000"
 1250      4000
 1251 006c 00426151 		.ascii	"\000BaQIF"
 1251      4946
 1252 0072 00214145 		.ascii	"\000!AEK1"
 1252      4B31
 1253 0078 00181412 		.ascii	"\000\030\024\022\177\020"
 1253      7F10
 1254 007e 00274545 		.ascii	"\000'EEE9"
 1254      4539
 1255 0084 003C4A49 		.ascii	"\000<JII0"
 1255      4930
 1256 008a 00017109 		.ascii	"\000\001q\011\005\003"
 1256      0503
 1257 0090 00364949 		.ascii	"\0006III6"
 1257      4936
 1258 0096 00064949 		.ascii	"\000\006II)\036"
 1258      291E
 1259 009c 00003636 		.ascii	"\000\00066\000\000"
 1259      0000
 1260 00a2 00005636 		.ascii	"\000\000V6\000\000"
 1260      0000
 1261 00a8 00081422 		.ascii	"\000\010\024\"A\000"
 1261      4100
 1262 00ae 00141414 		.ascii	"\000\024\024\024\024\024"
 1262      1414
 1263 00b4 00004122 		.ascii	"\000\000A\"\024\010"
 1263      1408
 1264 00ba 00020151 		.ascii	"\000\002\001Q\011\006"
 1264      0906
 1265 00c0 00324959 		.ascii	"\0002IYQ>"
 1265      513E
 1266 00c6 007C1211 		.ascii	"\000|\022\021\022|"
 1266      127C
 1267 00cc 007F4949 		.ascii	"\000\177III6"
 1267      4936
 1268 00d2 003E4141 		.ascii	"\000>AAA\""
 1268      4122
 1269 00d8 007F4141 		.ascii	"\000\177AA\"\034"
 1269      221C
 1270 00de 007F4949 		.ascii	"\000\177IIIA"
 1270      4941
 1271 00e4 007F0909 		.ascii	"\000\177\011\011\011\001"
 1271      0901
 1272 00ea 003E4149 		.ascii	"\000>AIIz"
 1272      497A
 1273 00f0 007F0808 		.ascii	"\000\177\010\010\010\177"
 1273      087F
 1274 00f6 0000417F 		.ascii	"\000\000A\177A\000"
 1274      4100
 1275 00fc 00204041 		.ascii	"\000 @A?\001"
 1275      3F01
 1276 0102 007F0814 		.ascii	"\000\177\010\024\"A"
 1276      2241
 1277 0108 007F4040 		.ascii	"\000\177@@@@"
 1277      4040
 1278 010e 007F020C 		.ascii	"\000\177\002\014\002\177"
ARM GAS  /tmp/ccAcRfab.s 			page 34


 1278      027F
 1279 0114 007F0408 		.ascii	"\000\177\004\010\020\177"
 1279      107F
 1280 011a 003E4141 		.ascii	"\000>AAA>"
 1280      413E
 1281 0120 007F0909 		.ascii	"\000\177\011\011\011\006"
 1281      0906
 1282 0126 003E4151 		.ascii	"\000>AQ!^"
 1282      215E
 1283 012c 007F0919 		.ascii	"\000\177\011\031)F"
 1283      2946
 1284 0132 00464949 		.ascii	"\000FIII1"
 1284      4931
 1285 0138 0001017F 		.ascii	"\000\001\001\177\001\001"
 1285      0101
 1286 013e 003F4040 		.ascii	"\000?@@@?"
 1286      403F
 1287 0144 001F2040 		.ascii	"\000\037 @ \037"
 1287      201F
 1288 014a 003F4038 		.ascii	"\000?@8@?"
 1288      403F
 1289 0150 00631408 		.ascii	"\000c\024\010\024c"
 1289      1463
 1290 0156 00070870 		.ascii	"\000\007\010p\010\007"
 1290      0807
 1291 015c 00615149 		.ascii	"\000aQIEC"
 1291      4543
 1292 0162 00007F41 		.ascii	"\000\000\177AA\000"
 1292      4100
 1293 0168 00552A55 		.ascii	"\000U*U*U"
 1293      2A55
 1294 016e 00004141 		.ascii	"\000\000AA\177\000"
 1294      7F00
 1295 0174 00040201 		.ascii	"\000\004\002\001\002\004"
 1295      0204
 1296 017a 00404040 		.ascii	"\000@@@@@"
 1296      4040
 1297 0180 00000102 		.ascii	"\000\000\001\002\004\000"
 1297      0400
 1298 0186 00205454 		.ascii	"\000 TTTx"
 1298      5478
 1299 018c 007F4844 		.ascii	"\000\177HDD8"
 1299      4438
 1300 0192 00384444 		.ascii	"\0008DDD "
 1300      4420
 1301 0198 00384444 		.ascii	"\0008DDH\177"
 1301      487F
 1302 019e 00385454 		.ascii	"\0008TTT\030"
 1302      5418
 1303 01a4 00087E09 		.ascii	"\000\010~\011\001\002"
 1303      0102
 1304 01aa 0018A4A4 		.ascii	"\000\030\244\244\244|"
 1304      A47C
 1305 01b0 007F0804 		.ascii	"\000\177\010\004\004x"
 1305      0478
 1306 01b6 0000447D 		.ascii	"\000\000D}@\000"
 1306      4000
ARM GAS  /tmp/ccAcRfab.s 			page 35


 1307 01bc 00408084 		.ascii	"\000@\200\204}\000"
 1307      7D00
 1308 01c2 007F1028 		.ascii	"\000\177\020(D\000"
 1308      4400
 1309 01c8 0000417F 		.ascii	"\000\000A\177@\000"
 1309      4000
 1310 01ce 007C0418 		.ascii	"\000|\004\030\004x"
 1310      0478
 1311 01d4 007C0804 		.ascii	"\000|\010\004\004x"
 1311      0478
 1312 01da 00384444 		.ascii	"\0008DDD8"
 1312      4438
 1313 01e0 00FC2424 		.ascii	"\000\374$$$\030"
 1313      2418
 1314 01e6 00182424 		.ascii	"\000\030$$\030\374"
 1314      18FC
 1315 01ec 007C0804 		.ascii	"\000|\010\004\004\010"
 1315      0408
 1316 01f2 00485454 		.ascii	"\000HTTT "
 1316      5420
 1317 01f8 00043F44 		.ascii	"\000\004?D@ "
 1317      4020
 1318 01fe 003C4040 		.ascii	"\000<@@ |"
 1318      207C
 1319 0204 001C2040 		.ascii	"\000\034 @ \034"
 1319      201C
 1320 020a 003C4030 		.ascii	"\000<@0@<"
 1320      403C
 1321 0210 00442810 		.ascii	"\000D(\020(D"
 1321      2844
 1322 0216 001CA0A0 		.ascii	"\000\034\240\240\240|"
 1322      A07C
 1323 021c 00446454 		.ascii	"\000DdTLD"
 1323      4C44
 1324 0222 14141414 		.ascii	"\024\024\024\024\024\024"
 1324      1414
 1325              		.section	.rodata.F8X16,"a"
 1326              		.align	2
 1327              		.set	.LANCHOR4,. + 0
 1330              	F8X16:
 1331 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 1331      00000000 
 1331      00000000 
 1331      00
 1332 000d 00000000 		.ascii	"\000\000\000\000\000\000\370\000\000\000\000\000\000"
 1332      0000F800 
 1332      00000000 
 1332      00
 1333 001a 00333000 		.ascii	"\00030\000\000\000\000\020\014\006\020\014\006\000\000"
 1333      00000010 
 1333      0C06100C 
 1333      060000
 1334 0029 00000000 		.ascii	"\000\000\000\000\000\000\000@\300x@\300x@\000\004?\004"
 1334      00000040 
 1334      C07840C0 
 1334      78400004 
 1334      3F04
ARM GAS  /tmp/ccAcRfab.s 			page 36


 1335 003b 043F0404 		.ascii	"\004?\004\004\000\000p\210\374\0100\000\000\000\030"
 1335      00007088 
 1335      FC083000 
 1335      000018
 1336 004a 20FF211E 		.ascii	" \377!\036\000\000\360\010\360\000\340\030\000\000\000"
 1336      0000F008 
 1336      F000E018 
 1336      000000
 1337 0059 211C031E 		.ascii	"!\034\003\036!\036\000\000\360\010\210p\000\000\000"
 1337      211E0000 
 1337      F0088870 
 1337      000000
 1338 0068 1E212324 		.ascii	"\036!#$\031'!\020\020\026\016\000\000\000\000\000\000"
 1338      19272110 
 1338      10160E00 
 1338      00000000 
 1338      00
 1339 0079 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\340\030\004"
 1339      00000000 
 1339      0000E018 
 1339      04
 1340 0086 02000000 		.ascii	"\002\000\000\000\000\007\030 @\000\000\002\004\030\340"
 1340      00071820 
 1340      40000002 
 1340      0418E0
 1341 0095 00000000 		.ascii	"\000\000\000\000@ \030\007\000\000\000@@\200\360\200"
 1341      40201807 
 1341      00000040 
 1341      4080F080 
 1342 00a5 40400002 		.ascii	"@@\000\002\002\001\017\001\002\002\000\000\000\000\360"
 1342      02010F01 
 1342      02020000 
 1342      0000F0
 1343 00b4 00000000 		.ascii	"\000\000\000\000\001\001\001\037\001\001\001\000\000"
 1343      0101011F 
 1343      01010100 
 1343      00
 1344 00c1 00000000 		.ascii	"\000\000\000\000\000\000\000\200\260p\000\000\000\000"
 1344      00000080 
 1344      B0700000 
 1344      0000
 1345 00cf 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\001\001\001"
 1345      00000000 
 1345      00000101 
 1345      01
 1346 00dc 01010101 		.ascii	"\001\001\001\001\000\000\000\000\000\000\000\000\000"
 1346      00000000 
 1346      00000000 
 1346      00
 1347 00e9 30300000 		.ascii	"00\000\000\000\000\000\000\000\000\000\200`\030\004"
 1347      00000000 
 1347      00000080 
 1347      601804
 1348 00f8 00601806 		.ascii	"\000`\030\006\001\000\000\000\000\340\020\010\010\020"
 1348      01000000 
 1348      00E01008 
 1348      0810
ARM GAS  /tmp/ccAcRfab.s 			page 37


 1349 0106 E000000F 		.ascii	"\340\000\000\017\020  \020\017\000\000\020\020\370\000"
 1349      10202010 
 1349      0F000010 
 1349      10F800
 1350 0115 00000000 		.ascii	"\000\000\000\000  ?  \000\000\000p\010\010\010\210p"
 1350      20203F20 
 1350      20000000 
 1350      70080808 
 1350      8870
 1351 0127 00003028 		.ascii	"\000\0000($\"!0\000\0000\010\210\210H0\000\000\030 "
 1351      24222130 
 1351      00003008 
 1351      88884830 
 1351      00001820 
 1352 013b 2020110E 		.ascii	"  \021\016\000\000\000\300 \020\370\000\000\000\007"
 1352      000000C0 
 1352      2010F800 
 1352      000007
 1353 014a 0424243F 		.ascii	"\004$$?$\000\000\370\010\210\210\010\010\000\000\031"
 1353      240000F8 
 1353      08888808 
 1353      08000019 
 1354 015a 21202011 		.ascii	"!  \021\016\000\000\340\020\210\210\030\000\000\000"
 1354      0E0000E0 
 1354      10888818 
 1354      000000
 1355 0169 0F112020 		.ascii	"\017\021  \021\016\000\0008\010\010\3108\010\000\000"
 1355      110E0000 
 1355      380808C8 
 1355      38080000 
 1356 0179 00003F00 		.ascii	"\000\000?\000\000\000\000\000p\210\010\010\210p\000"
 1356      00000000 
 1356      70880808 
 1356      887000
 1357 0188 001C2221 		.ascii	"\000\034\"!!\"\034\000\000\340\020\010\010\020\340\000"
 1357      21221C00 
 1357      00E01008 
 1357      0810E000 
 1358 0198 00003122 		.ascii	"\000\0001\"\"\021\017\000\000\000\000\300\300\000\000"
 1358      22110F00 
 1358      000000C0 
 1358      C00000
 1359 01a7 00000000 		.ascii	"\000\000\000\00000\000\000\000\000\000\000\200\000\000"
 1359      30300000 
 1359      00000000 
 1359      800000
 1360 01b6 00000000 		.ascii	"\000\000\000\000\200`\000\000\000\000\000\000\200@ "
 1360      80600000 
 1360      00000000 
 1360      804020
 1361 01c5 10080000 		.ascii	"\020\010\000\000\001\002\004\010\020 \000@@@@@@@\000"
 1361      01020408 
 1361      10200040 
 1361      40404040 
 1361      404000
 1362 01d8 04040404 		.ascii	"\004\004\004\004\004\004\004\000\000\010\020 @\200\000"
 1362      04040400 
ARM GAS  /tmp/ccAcRfab.s 			page 38


 1362      00081020 
 1362      408000
 1363 01e7 00002010 		.ascii	"\000\000 \020\010\004\002\001\000\000pH\010\010\010"
 1363      08040201 
 1363      00007048 
 1363      080808
 1364 01f6 F0000000 		.ascii	"\360\000\000\000\00006\001\000\000\3000\310(\350\020"
 1364      00303601 
 1364      0000C030 
 1364      C828E810 
 1365 0206 E0000718 		.ascii	"\340\000\007\030'$#\024\013\000\000\000\3008\340\000"
 1365      27242314 
 1365      0B000000 
 1365      C038E000 
 1366 0216 0000203C 		.ascii	"\000\000 <#\002\002'8 \010\370\210\210\210p\000\000"
 1366      23020227 
 1366      382008F8 
 1366      88888870 
 1366      0000
 1367 0228 203F2020 		.ascii	" ?   \021\016\000\3000\010\010\010\0108\000\007\030"
 1367      20110E00 
 1367      C0300808 
 1367      08083800 
 1367      0718
 1368 023a 20202010 		.ascii	"   \020\010\000\010\370\010\010\010\020\340\000 ?  "
 1368      080008F8 
 1368      08080810 
 1368      E000203F 
 1368      2020
 1369 024c 20100F00 		.ascii	" \020\017\000\010\370\210\210\350\010\020\000 ?  # "
 1369      08F88888 
 1369      E8081000 
 1369      203F2020 
 1369      2320
 1370 025e 180008F8 		.ascii	"\030\000\010\370\210\210\350\010\020\000 ? \000\003"
 1370      8888E808 
 1370      1000203F 
 1370      200003
 1371 026d 000000C0 		.ascii	"\000\000\000\3000\010\010\0108\000\000\007\030  \"\036"
 1371      30080808 
 1371      38000007 
 1371      18202022 
 1371      1E
 1372 027e 020008F8 		.ascii	"\002\000\010\370\010\000\000\010\370\010 ?!\001\001"
 1372      08000008 
 1372      F808203F 
 1372      210101
 1373 028d 213F2000 		.ascii	"!? \000\010\010\370\010\010\000\000\000  ?  \000\000"
 1373      0808F808 
 1373      08000000 
 1373      20203F20 
 1373      200000
 1374 02a0 00000808 		.ascii	"\000\000\010\010\370\010\010\000\300\200\200\200\177"
 1374      F8080800 
 1374      C0808080 
 1374      7F
 1375 02ad 00000008 		.ascii	"\000\000\000\010\370\210\300(\030\010\000 ? \001&8 "
ARM GAS  /tmp/ccAcRfab.s 			page 39


 1375      F888C028 
 1375      18080020 
 1375      3F200126 
 1375      3820
 1376 02bf 0008F808 		.ascii	"\000\010\370\010\000\000\000\000\000 ?    0\000\010"
 1376      00000000 
 1376      00203F20 
 1376      20202030 
 1376      0008
 1377 02d1 F8F800F8 		.ascii	"\370\370\000\370\370\010\000 ?\000?\000? \000\010\370"
 1377      F8080020 
 1377      3F003F00 
 1377      3F200008 
 1377      F8
 1378 02e2 30C00008 		.ascii	"0\300\000\010\370\010 ? \000\007\030?\000\340\020\010"
 1378      F808203F 
 1378      20000718 
 1378      3F00E010 
 1378      08
 1379 02f3 080810E0 		.ascii	"\010\010\020\340\000\017\020   \020\017\000\010\370"
 1379      000F1020 
 1379      2020100F 
 1379      0008F8
 1380 0302 08080808 		.ascii	"\010\010\010\010\360\000 ?!\001\001\001\000\000\340"
 1380      F000203F 
 1380      21010101 
 1380      0000E0
 1381 0311 10080808 		.ascii	"\020\010\010\010\020\340\000\017\030$$8PO\000\010\370"
 1381      10E0000F 
 1381      18242438 
 1381      504F0008 
 1381      F8
 1382 0322 88888888 		.ascii	"\210\210\210\210p\000 ? \000\003\0140 \000p\210\010"
 1382      7000203F 
 1382      2000030C 
 1382      30200070 
 1382      8808
 1383 0334 08083800 		.ascii	"\010\0108\000\0008 !!\"\034\000\030\010\010\370\010"
 1383      00382021 
 1383      21221C00 
 1383      180808F8 
 1383      08
 1384 0345 08180000 		.ascii	"\010\030\000\000\000 ? \000\000\000\010\370\010\000"
 1384      00203F20 
 1384      00000008 
 1384      F80800
 1385 0354 0008F808 		.ascii	"\000\010\370\010\000\037    \037\000\010x\210\000\000"
 1385      001F2020 
 1385      20201F00 
 1385      08788800 
 1385      00
 1386 0365 C8380800 		.ascii	"\3108\010\000\000\0078\016\001\000\000\370\010\000\370"
 1386      0007380E 
 1386      010000F8 
 1386      0800F8
 1387 0374 0008F800 		.ascii	"\000\010\370\000\003<\007\000\007<\003\000\010\030h"
 1387      033C0700 
ARM GAS  /tmp/ccAcRfab.s 			page 40


 1387      073C0300 
 1387      081868
 1388 0383 80806818 		.ascii	"\200\200h\030\010 0,\003\003,0 \0108\310\000\3108\010"
 1388      0820302C 
 1388      03032C30 
 1388      200838C8 
 1388      00C83808 
 1389 0397 00000020 		.ascii	"\000\000\000 ? \000\000\000\020\010\010\010\3108\010"
 1389      3F200000 
 1389      00100808 
 1389      08C83808 
 1390 03a7 00203826 		.ascii	"\000 8&!  \030\000\000\000\000\376\002\002\002\000\000"
 1390      21202018 
 1390      00000000 
 1390      FE020202 
 1390      0000
 1391 03b9 00007F40 		.ascii	"\000\000\177@@@\000\000\0140\300\000\000\000\000\000"
 1391      40400000 
 1391      0C30C000 
 1391      00000000 
 1392 03c9 00000106 		.ascii	"\000\000\001\0068\300\000\000\002\002\002\376\000\000"
 1392      38C00000 
 1392      020202FE 
 1392      0000
 1393 03d7 00004040 		.ascii	"\000\000@@@\177\000\000\000\000\000\004\002\002\002"
 1393      407F0000 
 1393      00000004 
 1393      020202
 1394 03e6 04000000 		.ascii	"\004\000\000\000\000\000\000\000\000\000\000\000\000"
 1394      00000000 
 1394      00000000 
 1394      00
 1395 03f3 00000000 		.ascii	"\000\000\000\000\000\200\200\200\200\200\200\200\200"
 1395      00808080 
 1395      80808080 
 1395      80
 1396 0400 00020204 		.ascii	"\000\002\002\004\000\000\000\000\000\000\000\000\000"
 1396      00000000 
 1396      00000000 
 1396      00
 1397 040d 00000000 		.ascii	"\000\000\000\000\000\200\200\200\200\000\000\000\031"
 1397      00808080 
 1397      80000000 
 1397      19
 1398 041a 24222222 		.ascii	"$\"\"\"? \010\370\000\200\200\000\000\000\000?\021 "
 1398      3F2008F8 
 1398      00808000 
 1398      0000003F 
 1398      1120
 1399 042c 20110E00 		.ascii	" \021\016\000\000\000\000\200\200\200\000\000\000\016"
 1399      00000080 
 1399      80800000 
 1399      000E
 1400 043a 11202020 		.ascii	"\021   \021\000\000\000\000\200\200\210\370\000\000"
 1400      11000000 
 1400      00808088 
 1400      F80000
ARM GAS  /tmp/ccAcRfab.s 			page 41


 1401 0449 0E112020 		.ascii	"\016\021  \020? \000\000\200\200\200\200\000\000\000"
 1401      103F2000 
 1401      00808080 
 1401      80000000 
 1402 0459 1F222222 		.ascii	"\037\"\"\"\"\023\000\000\200\200\360\210\210\210\030"
 1402      22130000 
 1402      8080F088 
 1402      888818
 1403 0468 0020203F 		.ascii	"\000  ?  \000\000\000\000\200\200\200\200\200\000\000"
 1403      20200000 
 1403      00008080 
 1403      80808000 
 1403      00
 1404 0479 6B949494 		.ascii	"k\224\224\224\223`\000\010\370\000\200\200\200\000\000"
 1404      93600008 
 1404      F8008080 
 1404      800000
 1405 0488 203F2100 		.ascii	" ?!\000\000 ? \000\200\230\230\000\000\000\000\000 "
 1405      00203F20 
 1405      00809898 
 1405      00000000 
 1405      0020
 1406 049a 203F2020 		.ascii	" ?  \000\000\000\000\000\200\230\230\000\000\000\300"
 1406      00000000 
 1406      00809898 
 1406      000000C0 
 1407 04aa 8080807F 		.ascii	"\200\200\200\177\000\000\010\370\000\000\200\200\200"
 1407      000008F8 
 1407      00008080 
 1407      80
 1408 04b7 00203F24 		.ascii	"\000 ?$\002-0 \000\000\010\010\370\000\000\000\000\000"
 1408      022D3020 
 1408      00000808 
 1408      F8000000 
 1408      0000
 1409 04c9 20203F20 		.ascii	"  ?  \000\000\200\200\200\200\200\200\200\000 ? \000"
 1409      20000080 
 1409      80808080 
 1409      80800020 
 1409      3F2000
 1410 04dc 3F20003F 		.ascii	"? \000?\200\200\000\200\200\200\000\000 ?!\000\000 "
 1410      80800080 
 1410      80800000 
 1410      203F2100 
 1410      0020
 1411 04ee 3F200000 		.ascii	"? \000\000\200\200\200\200\000\000\000\037    \037\000"
 1411      80808080 
 1411      0000001F 
 1411      20202020 
 1411      1F00
 1412 0500 80800080 		.ascii	"\200\200\000\200\200\000\000\000\200\377\241  \021\016"
 1412      80000000 
 1412      80FFA120 
 1412      20110E
 1413 050f 00000000 		.ascii	"\000\000\000\000\200\200\200\200\000\000\016\021  \240"
 1413      80808080 
 1413      00000E11 
ARM GAS  /tmp/ccAcRfab.s 			page 42


 1413      2020A0
 1414 051e FF808080 		.ascii	"\377\200\200\200\200\000\200\200\200\000  ?! \000\001"
 1414      80008080 
 1414      80002020 
 1414      3F212000 
 1414      01
 1415 052f 00000080 		.ascii	"\000\000\000\200\200\200\200\200\000\0003$$$$\031\000"
 1415      80808080 
 1415      00003324 
 1415      24242419 
 1415      00
 1416 0540 008080E0 		.ascii	"\000\200\200\340\200\200\000\000\000\000\000\037  \000"
 1416      80800000 
 1416      0000001F 
 1416      202000
 1417 054f 00808000 		.ascii	"\000\200\200\000\000\000\200\200\000\000\037   \020"
 1417      00008080 
 1417      00001F20 
 1417      202010
 1418 055e 3F208080 		.ascii	"? \200\200\200\000\000\200\200\200\000\001\0160\010"
 1418      80000080 
 1418      80800001 
 1418      0E3008
 1419 056d 06010080 		.ascii	"\006\001\000\200\200\000\200\000\200\200\200\0170\014"
 1419      80008000 
 1419      8080800F 
 1419      300C
 1420 057b 030C300F 		.ascii	"\003\0140\017\000\000\200\200\000\200\200\200\000\000"
 1420      00008080 
 1420      00808080 
 1420      0000
 1421 0589 20312E0E 		.ascii	" 1.\0161 \000\200\200\200\000\000\200\200\200\200\201"
 1421      31200080 
 1421      80800000 
 1421      80808080 
 1421      81
 1422 059a 8E701806 		.ascii	"\216p\030\006\001\000\000\200\200\200\200\200\200\000"
 1422      01000080 
 1422      80808080 
 1422      8000
 1423 05a8 0021302C 		.ascii	"\000!0,\"!0\000\000\000\000\000\200|\002\002\000\000"
 1423      22213000 
 1423      00000000 
 1423      807C0202 
 1423      0000
 1424 05ba 0000003F 		.ascii	"\000\000\000?@@\000\000\000\000\377\000\000\000\000"
 1424      40400000 
 1424      0000FF00 
 1424      000000
 1425 05c9 000000FF 		.ascii	"\000\000\000\377\000\000\000\000\002\002|\200\000\000"
 1425      00000000 
 1425      02027C80 
 1425      0000
 1426 05d7 00004040 		.ascii	"\000\000@@?\000\000\000\000\000\006\001\001\002\002"
 1426      3F000000 
 1426      00000601 
 1426      010202
ARM GAS  /tmp/ccAcRfab.s 			page 43


 1427 05e6 04040000 		.ascii	"\004\004\000\000\000\000\000\000\000\000"
 1427      00000000 
 1427      0000
 1428              		.text
 1429              	.Letext0:
 1430              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 1431              		.file 3 "/usr/include/newlib/sys/_types.h"
 1432              		.file 4 "/usr/include/newlib/sys/reent.h"
 1433              		.file 5 "/usr/include/newlib/sys/lock.h"
 1434              		.file 6 "/usr/include/newlib/stdlib.h"
 1435              		.file 7 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 1436              		.file 8 "Drivers/CMSIS/Include/core_cm4.h"
 1437              		.file 9 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1438              		.file 10 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 1439              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1440              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1441              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 1442              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1443              		.file 15 "Core/Inc/oledfont.h"
ARM GAS  /tmp/ccAcRfab.s 			page 44


DEFINED SYMBOLS
                            *ABS*:0000000000000000 oled.c
     /tmp/ccAcRfab.s:18     .text.WriteCmd:0000000000000000 $t
     /tmp/ccAcRfab.s:26     .text.WriteCmd:0000000000000000 WriteCmd
     /tmp/ccAcRfab.s:64     .text.WriteCmd:0000000000000020 $d
     /tmp/ccAcRfab.s:70     .text.OLED_Refreash:0000000000000000 $t
     /tmp/ccAcRfab.s:77     .text.OLED_Refreash:0000000000000000 OLED_Refreash
     /tmp/ccAcRfab.s:145    .text.OLED_Refreash:000000000000004c $d
     /tmp/ccAcRfab.s:153    .text.OLED_Init:0000000000000000 $t
     /tmp/ccAcRfab.s:160    .text.OLED_Init:0000000000000000 OLED_Init
     /tmp/ccAcRfab.s:193    .text.OLED_Clear:0000000000000000 $t
     /tmp/ccAcRfab.s:200    .text.OLED_Clear:0000000000000000 OLED_Clear
     /tmp/ccAcRfab.s:314    .text.OLED_Clear:0000000000000054 $d
     /tmp/ccAcRfab.s:320    .text.oled_pow:0000000000000000 $t
     /tmp/ccAcRfab.s:327    .text.oled_pow:0000000000000000 oled_pow
     /tmp/ccAcRfab.s:365    .text.OLED_ShowChar:0000000000000000 $t
     /tmp/ccAcRfab.s:372    .text.OLED_ShowChar:0000000000000000 OLED_ShowChar
     /tmp/ccAcRfab.s:705    .text.OLED_ShowChar:0000000000000168 $d
     /tmp/ccAcRfab.s:713    .text.OLED_ShowNum:0000000000000000 $t
     /tmp/ccAcRfab.s:720    .text.OLED_ShowNum:0000000000000000 OLED_ShowNum
     /tmp/ccAcRfab.s:868    .text.OLED_ShowNum:000000000000009c $d
     /tmp/ccAcRfab.s:873    .text.OLED_ShowString:0000000000000000 $t
     /tmp/ccAcRfab.s:880    .text.OLED_ShowString:0000000000000000 OLED_ShowString
     /tmp/ccAcRfab.s:971    .text.OLED_ShowCHinese:0000000000000000 $t
     /tmp/ccAcRfab.s:978    .text.OLED_ShowCHinese:0000000000000000 OLED_ShowCHinese
     /tmp/ccAcRfab.s:1150   .text.OLED_ShowCHinese:0000000000000094 $d
     /tmp/ccAcRfab.s:1187   .data.CMD_Data:0000000000000000 CMD_Data
     /tmp/ccAcRfab.s:1174   .bss.OLED_2_data:0000000000000000 OLED_2_data
     /tmp/ccAcRfab.s:1167   .bss.OLED_1_data:0000000000000000 OLED_1_data
     /tmp/ccAcRfab.s:1195   .data.Hzk:0000000000000000 Hzk
     /tmp/ccAcRfab.s:1330   .rodata.F8X16:0000000000000000 F8X16
     /tmp/ccAcRfab.s:1232   .rodata.F6x8:0000000000000000 F6x8
     /tmp/ccAcRfab.s:1163   .bss.OLED_1_data:0000000000000000 $d
     /tmp/ccAcRfab.s:1170   .bss.OLED_2_data:0000000000000000 $d
     /tmp/ccAcRfab.s:1180   .bss.oled_refresh.8935:0000000000000000 oled_refresh.8935
     /tmp/ccAcRfab.s:1181   .bss.oled_refresh.8935:0000000000000000 $d
     /tmp/ccAcRfab.s:1183   .data.CMD_Data:0000000000000000 $d
     /tmp/ccAcRfab.s:1191   .data.Hzk:0000000000000000 $d
     /tmp/ccAcRfab.s:1228   .rodata.F6x8:0000000000000000 $d
     /tmp/ccAcRfab.s:1326   .rodata.F8X16:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_I2C_Mem_Write_DMA
hi2c1
HAL_Delay
